Terminals unused in grammar

    RESERVED


Grammar

    0 $accept: Program $end

    1 Program: FunctionsAndDeclarations

    2 FunctionsAndDeclarations: FunctionDefinition FunctionsAndDeclarations
    3                         | FunctionDeclaration FunctionsAndDeclarations
    4                         | Declaration FunctionsAndDeclarations
    5                         | ε

    6 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

    7 FunctionBody: LBRACE DeclarationsAndStatements RBRACE

    8 DeclarationsAndStatements: StatementOrDeclaration DeclarationsAndStatements
    9                          | ε

   10 StatementOrDeclaration: Statement
   11                       | Declaration

   12 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI

   13 FunctionDeclarator: ID LPAR ParameterList RPAR

   14 ParameterList: ParameterDeclaration COMMA ParameterList
   15              | ParameterDeclaration
   16              | ε

   17 ParameterDeclaration: TypeSpec ID
   18                     | TypeSpec

   19 Declaration: TypeSpec Declarator SEMI
   20            | TypeSpec error SEMI

   21 TypeSpec: CHAR
   22         | INT
   23         | VOID
   24         | SHORT
   25         | DOUBLE
   26         | error

   27 Declarator: ID
   28           | ID ASSIGN Expr

   29 Statement: LBRACE DeclarationsAndStatements RBRACE
   30          | IF LPAR Expr RPAR Statement
   31          | IF LPAR Expr RPAR Statement ELSE Statement
   32          | WHILE LPAR Expr RPAR Statement
   33          | RETURN SEMI
   34          | RETURN Expr SEMI
   35          | Expr SEMI

   36 Expr: Expr ASSIGN Expr
   37     | Expr COMMA Expr
   38     | Expr PLUS Expr
   39     | Expr MINUS Expr
   40     | Expr MUL Expr
   41     | Expr DIV Expr
   42     | Expr MOD Expr
   43     | Expr OR Expr
   44     | Expr AND Expr
   45     | Expr BITWISEAND Expr
   46     | Expr BITWISEOR Expr
   47     | Expr BITWISEXOR Expr
   48     | Expr EQ Expr
   49     | Expr NE Expr
   50     | Expr LE Expr
   51     | Expr GE Expr
   52     | Expr LT Expr
   53     | Expr GT Expr
   54     | PLUS Expr
   55     | MINUS Expr
   56     | NOT Expr
   57     | ID LPAR COMMA RPAR
   58     | ID
   59     | NATURAL
   60     | CHRLIT
   61     | DECIMAL
   62     | LPAR Expr RPAR
   63     | LPAR error RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256) 20 26 63
    RESERVED <value> (258)
    IF <value> (259) 30 31
    INT <value> (260) 22
    SHORT <value> (261) 24
    DOUBLE <value> (262) 25
    CHAR <value> (263) 21
    ELSE <value> (264) 31
    WHILE <value> (265) 32
    RETURN <value> (266) 33 34
    VOID <value> (267) 23
    BITWISEAND <value> (268) 45
    BITWISEOR <value> (269) 46
    BITWISEXOR <value> (270) 47
    AND <value> (271) 44
    ASSIGN <value> (272) 28 36
    MUL <value> (273) 40
    COMMA <value> (274) 14 37 57
    DIV <value> (275) 41
    EQ <value> (276) 48
    GE <value> (277) 51
    GT <value> (278) 53
    LBRACE <value> (279) 7 29
    LE <value> (280) 50
    LPAR <value> (281) 13 30 31 32 57 62 63
    LT <value> (282) 52
    MINUS <value> (283) 39 55
    MOD <value> (284) 42
    NE <value> (285) 49
    NOT <value> (286) 56
    OR <value> (287) 43
    PLUS <value> (288) 38 54
    RBRACE <value> (289) 7 29
    RPAR <value> (290) 13 30 31 32 57 62 63
    SEMI <value> (291) 12 19 20 33 34 35
    ID <value> (292) 13 17 27 28 57 58
    NATURAL <value> (293) 59
    DECIMAL <value> (294) 61
    CHRLIT <value> (295) 60


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    Program <no> (42)
        on left: 1
        on right: 0
    FunctionsAndDeclarations <no> (43)
        on left: 2 3 4 5
        on right: 1 2 3 4
    FunctionDefinition <no> (44)
        on left: 6
        on right: 2
    FunctionBody <no> (45)
        on left: 7
        on right: 6
    DeclarationsAndStatements <no> (46)
        on left: 8 9
        on right: 7 8 29
    StatementOrDeclaration <no> (47)
        on left: 10 11
        on right: 8
    FunctionDeclaration <no> (48)
        on left: 12
        on right: 3
    FunctionDeclarator <no> (49)
        on left: 13
        on right: 6 12
    ParameterList <no> (50)
        on left: 14 15 16
        on right: 13 14
    ParameterDeclaration <no> (51)
        on left: 17 18
        on right: 14 15
    Declaration <no> (52)
        on left: 19 20
        on right: 4 11
    TypeSpec <no> (53)
        on left: 21 22 23 24 25 26
        on right: 6 12 17 18 19 20
    Declarator <no> (54)
        on left: 27 28
        on right: 19
    Statement <no> (55)
        on left: 29 30 31 32 33 34 35
        on right: 10 30 31 32
    Expr <no> (56)
        on left: 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63
        on right: 28 30 31 32 34 35 36 37 38 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 62


State 0

    0 $accept: • Program $end

    error   shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    CHAR    shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 5 (FunctionsAndDeclarations)

    Program                   go to state 7
    FunctionsAndDeclarations  go to state 8
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 1

   26 TypeSpec: error •

    $default  reduce using rule 26 (TypeSpec)


State 2

   22 TypeSpec: INT •

    $default  reduce using rule 22 (TypeSpec)


State 3

   24 TypeSpec: SHORT •

    $default  reduce using rule 24 (TypeSpec)


State 4

   25 TypeSpec: DOUBLE •

    $default  reduce using rule 25 (TypeSpec)


State 5

   21 TypeSpec: CHAR •

    $default  reduce using rule 21 (TypeSpec)


State 6

   23 TypeSpec: VOID •

    $default  reduce using rule 23 (TypeSpec)


State 7

    0 $accept: Program • $end

    $end  shift, and go to state 13


State 8

    1 Program: FunctionsAndDeclarations •

    $default  reduce using rule 1 (Program)


State 9

    2 FunctionsAndDeclarations: FunctionDefinition • FunctionsAndDeclarations

    error   shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    CHAR    shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 5 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 14
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 10

    3 FunctionsAndDeclarations: FunctionDeclaration • FunctionsAndDeclarations

    error   shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    CHAR    shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 5 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 15
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 11

    4 FunctionsAndDeclarations: Declaration • FunctionsAndDeclarations

    error   shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    CHAR    shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 5 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 16
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 12

    6 FunctionDefinition: TypeSpec • FunctionDeclarator FunctionBody
   12 FunctionDeclaration: TypeSpec • FunctionDeclarator SEMI
   19 Declaration: TypeSpec • Declarator SEMI
   20            | TypeSpec • error SEMI

    error  shift, and go to state 17
    ID     shift, and go to state 18

    FunctionDeclarator  go to state 19
    Declarator          go to state 20


State 13

    0 $accept: Program $end •

    $default  accept


State 14

    2 FunctionsAndDeclarations: FunctionDefinition FunctionsAndDeclarations •

    $default  reduce using rule 2 (FunctionsAndDeclarations)


State 15

    3 FunctionsAndDeclarations: FunctionDeclaration FunctionsAndDeclarations •

    $default  reduce using rule 3 (FunctionsAndDeclarations)


State 16

    4 FunctionsAndDeclarations: Declaration FunctionsAndDeclarations •

    $default  reduce using rule 4 (FunctionsAndDeclarations)


State 17

   20 Declaration: TypeSpec error • SEMI

    SEMI  shift, and go to state 21


State 18

   13 FunctionDeclarator: ID • LPAR ParameterList RPAR
   27 Declarator: ID •
   28           | ID • ASSIGN Expr

    ASSIGN  shift, and go to state 22
    LPAR    shift, and go to state 23

    $default  reduce using rule 27 (Declarator)


State 19

    6 FunctionDefinition: TypeSpec FunctionDeclarator • FunctionBody
   12 FunctionDeclaration: TypeSpec FunctionDeclarator • SEMI

    LBRACE  shift, and go to state 24
    SEMI    shift, and go to state 25

    FunctionBody  go to state 26


State 20

   19 Declaration: TypeSpec Declarator • SEMI

    SEMI  shift, and go to state 27


State 21

   20 Declaration: TypeSpec error SEMI •

    $default  reduce using rule 20 (Declaration)


State 22

   28 Declarator: ID ASSIGN • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 36


State 23

   13 FunctionDeclarator: ID LPAR • ParameterList RPAR

    error   shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    CHAR    shift, and go to state 5
    VOID    shift, and go to state 6

    RPAR  reduce using rule 16 (ParameterList)

    ParameterList         go to state 37
    ParameterDeclaration  go to state 38
    TypeSpec              go to state 39


State 24

    7 FunctionBody: LBRACE • DeclarationsAndStatements RBRACE

    error    shift, and go to state 1
    IF       shift, and go to state 40
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    CHAR     shift, and go to state 5
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    RBRACE  reduce using rule 9 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 44
    StatementOrDeclaration     go to state 45
    Declaration                go to state 46
    TypeSpec                   go to state 47
    Statement                  go to state 48
    Expr                       go to state 49


State 25

   12 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI •

    $default  reduce using rule 12 (FunctionDeclaration)


State 26

    6 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody •

    $default  reduce using rule 6 (FunctionDefinition)


State 27

   19 Declaration: TypeSpec Declarator SEMI •

    $default  reduce using rule 19 (Declaration)


State 28

   62 Expr: LPAR • Expr RPAR
   63     | LPAR • error RPAR

    error    shift, and go to state 50
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 51


State 29

   55 Expr: MINUS • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 52


State 30

   56 Expr: NOT • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 53


State 31

   54 Expr: PLUS • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 54


State 32

   57 Expr: ID • LPAR COMMA RPAR
   58     | ID •

    LPAR  shift, and go to state 55

    $default  reduce using rule 58 (Expr)


State 33

   59 Expr: NATURAL •

    $default  reduce using rule 59 (Expr)


State 34

   61 Expr: DECIMAL •

    $default  reduce using rule 61 (Expr)


State 35

   60 Expr: CHRLIT •

    $default  reduce using rule 60 (Expr)


State 36

   28 Declarator: ID ASSIGN Expr •
   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 62
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73

    $default  reduce using rule 28 (Declarator)


State 37

   13 FunctionDeclarator: ID LPAR ParameterList • RPAR

    RPAR  shift, and go to state 74


State 38

   14 ParameterList: ParameterDeclaration • COMMA ParameterList
   15              | ParameterDeclaration •

    COMMA  shift, and go to state 75

    $default  reduce using rule 15 (ParameterList)


State 39

   17 ParameterDeclaration: TypeSpec • ID
   18                     | TypeSpec •

    ID  shift, and go to state 76

    $default  reduce using rule 18 (ParameterDeclaration)


State 40

   30 Statement: IF • LPAR Expr RPAR Statement
   31          | IF • LPAR Expr RPAR Statement ELSE Statement

    LPAR  shift, and go to state 77


State 41

   32 Statement: WHILE • LPAR Expr RPAR Statement

    LPAR  shift, and go to state 78


State 42

   33 Statement: RETURN • SEMI
   34          | RETURN • Expr SEMI

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 79
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 80


State 43

   29 Statement: LBRACE • DeclarationsAndStatements RBRACE

    error    shift, and go to state 1
    IF       shift, and go to state 40
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    CHAR     shift, and go to state 5
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    RBRACE  reduce using rule 9 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 81
    StatementOrDeclaration     go to state 45
    Declaration                go to state 46
    TypeSpec                   go to state 47
    Statement                  go to state 48
    Expr                       go to state 49


State 44

    7 FunctionBody: LBRACE DeclarationsAndStatements • RBRACE

    RBRACE  shift, and go to state 82


State 45

    8 DeclarationsAndStatements: StatementOrDeclaration • DeclarationsAndStatements

    error    shift, and go to state 1
    IF       shift, and go to state 40
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    CHAR     shift, and go to state 5
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    RBRACE  reduce using rule 9 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 83
    StatementOrDeclaration     go to state 45
    Declaration                go to state 46
    TypeSpec                   go to state 47
    Statement                  go to state 48
    Expr                       go to state 49


State 46

   11 StatementOrDeclaration: Declaration •

    $default  reduce using rule 11 (StatementOrDeclaration)


State 47

   19 Declaration: TypeSpec • Declarator SEMI
   20            | TypeSpec • error SEMI

    error  shift, and go to state 17
    ID     shift, and go to state 84

    Declarator  go to state 20


State 48

   10 StatementOrDeclaration: Statement •

    $default  reduce using rule 10 (StatementOrDeclaration)


State 49

   35 Statement: Expr • SEMI
   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 62
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73
    SEMI        shift, and go to state 85


State 50

   63 Expr: LPAR error • RPAR

    RPAR  shift, and go to state 86


State 51

   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr
   62     | LPAR Expr • RPAR

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 62
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73
    RPAR        shift, and go to state 87


State 52

   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr
   55     | MINUS Expr •

    MUL  shift, and go to state 61
    DIV  shift, and go to state 63
    MOD  shift, and go to state 70

    $default  reduce using rule 55 (Expr)


State 53

   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr
   56     | NOT Expr •

    $default  reduce using rule 56 (Expr)


State 54

   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr
   54     | PLUS Expr •

    MUL  shift, and go to state 61
    DIV  shift, and go to state 63
    MOD  shift, and go to state 70

    $default  reduce using rule 54 (Expr)


State 55

   57 Expr: ID LPAR • COMMA RPAR

    COMMA  shift, and go to state 88


State 56

   45 Expr: Expr BITWISEAND • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 89


State 57

   46 Expr: Expr BITWISEOR • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 90


State 58

   47 Expr: Expr BITWISEXOR • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 91


State 59

   44 Expr: Expr AND • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 92


State 60

   36 Expr: Expr ASSIGN • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 93


State 61

   40 Expr: Expr MUL • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 94


State 62

   37 Expr: Expr COMMA • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 95


State 63

   41 Expr: Expr DIV • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 96


State 64

   48 Expr: Expr EQ • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 97


State 65

   51 Expr: Expr GE • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 98


State 66

   53 Expr: Expr GT • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 99


State 67

   50 Expr: Expr LE • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 100


State 68

   52 Expr: Expr LT • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 101


State 69

   39 Expr: Expr MINUS • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 102


State 70

   42 Expr: Expr MOD • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 103


State 71

   49 Expr: Expr NE • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 104


State 72

   43 Expr: Expr OR • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 105


State 73

   38 Expr: Expr PLUS • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 106


State 74

   13 FunctionDeclarator: ID LPAR ParameterList RPAR •

    $default  reduce using rule 13 (FunctionDeclarator)


State 75

   14 ParameterList: ParameterDeclaration COMMA • ParameterList

    error   shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    CHAR    shift, and go to state 5
    VOID    shift, and go to state 6

    RPAR  reduce using rule 16 (ParameterList)

    ParameterList         go to state 107
    ParameterDeclaration  go to state 38
    TypeSpec              go to state 39


State 76

   17 ParameterDeclaration: TypeSpec ID •

    $default  reduce using rule 17 (ParameterDeclaration)


State 77

   30 Statement: IF LPAR • Expr RPAR Statement
   31          | IF LPAR • Expr RPAR Statement ELSE Statement

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 108


State 78

   32 Statement: WHILE LPAR • Expr RPAR Statement

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 109


State 79

   33 Statement: RETURN SEMI •

    $default  reduce using rule 33 (Statement)


State 80

   34 Statement: RETURN Expr • SEMI
   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 62
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73
    SEMI        shift, and go to state 110


State 81

   29 Statement: LBRACE DeclarationsAndStatements • RBRACE

    RBRACE  shift, and go to state 111


State 82

    7 FunctionBody: LBRACE DeclarationsAndStatements RBRACE •

    $default  reduce using rule 7 (FunctionBody)


State 83

    8 DeclarationsAndStatements: StatementOrDeclaration DeclarationsAndStatements •

    $default  reduce using rule 8 (DeclarationsAndStatements)


State 84

   27 Declarator: ID •
   28           | ID • ASSIGN Expr

    ASSIGN  shift, and go to state 22

    $default  reduce using rule 27 (Declarator)


State 85

   35 Statement: Expr SEMI •

    $default  reduce using rule 35 (Statement)


State 86

   63 Expr: LPAR error RPAR •

    $default  reduce using rule 63 (Expr)


State 87

   62 Expr: LPAR Expr RPAR •

    $default  reduce using rule 62 (Expr)


State 88

   57 Expr: ID LPAR COMMA • RPAR

    RPAR  shift, and go to state 112


State 89

   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   45     | Expr BITWISEAND Expr •
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr

    MUL    shift, and go to state 61
    DIV    shift, and go to state 63
    EQ     shift, and go to state 64
    GE     shift, and go to state 65
    GT     shift, and go to state 66
    LE     shift, and go to state 67
    LT     shift, and go to state 68
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 70
    NE     shift, and go to state 71
    PLUS   shift, and go to state 73

    $default  reduce using rule 45 (Expr)


State 90

   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   46     | Expr BITWISEOR Expr •
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr

    BITWISEAND  shift, and go to state 56
    BITWISEXOR  shift, and go to state 58
    MUL         shift, and go to state 61
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    PLUS        shift, and go to state 73

    $default  reduce using rule 46 (Expr)


State 91

   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   47     | Expr BITWISEXOR Expr •
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr

    BITWISEAND  shift, and go to state 56
    MUL         shift, and go to state 61
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    PLUS        shift, and go to state 73

    $default  reduce using rule 47 (Expr)


State 92

   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   44     | Expr AND Expr •
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    MUL         shift, and go to state 61
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    PLUS        shift, and go to state 73

    $default  reduce using rule 44 (Expr)


State 93

   36 Expr: Expr • ASSIGN Expr
   36     | Expr ASSIGN Expr •
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73

    $default  reduce using rule 36 (Expr)


State 94

   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   40     | Expr MUL Expr •
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr

    $default  reduce using rule 40 (Expr)


State 95

   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   37     | Expr COMMA Expr •
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73

    $default  reduce using rule 37 (Expr)


State 96

   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   41     | Expr DIV Expr •
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr

    $default  reduce using rule 41 (Expr)


State 97

   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   48     | Expr EQ Expr •
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr

    MUL    shift, and go to state 61
    DIV    shift, and go to state 63
    GE     shift, and go to state 65
    GT     shift, and go to state 66
    LE     shift, and go to state 67
    LT     shift, and go to state 68
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 70
    PLUS   shift, and go to state 73

    $default  reduce using rule 48 (Expr)


State 98

   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   51     | Expr GE Expr •
   52     | Expr • LT Expr
   53     | Expr • GT Expr

    MUL    shift, and go to state 61
    DIV    shift, and go to state 63
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 70
    PLUS   shift, and go to state 73

    $default  reduce using rule 51 (Expr)


State 99

   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr
   53     | Expr GT Expr •

    MUL    shift, and go to state 61
    DIV    shift, and go to state 63
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 70
    PLUS   shift, and go to state 73

    $default  reduce using rule 53 (Expr)


State 100

   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   50     | Expr LE Expr •
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr

    MUL    shift, and go to state 61
    DIV    shift, and go to state 63
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 70
    PLUS   shift, and go to state 73

    $default  reduce using rule 50 (Expr)


State 101

   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   52     | Expr LT Expr •
   53     | Expr • GT Expr

    MUL    shift, and go to state 61
    DIV    shift, and go to state 63
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 70
    PLUS   shift, and go to state 73

    $default  reduce using rule 52 (Expr)


State 102

   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   39     | Expr MINUS Expr •
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr

    MUL  shift, and go to state 61
    DIV  shift, and go to state 63
    MOD  shift, and go to state 70

    $default  reduce using rule 39 (Expr)


State 103

   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   42     | Expr MOD Expr •
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr

    $default  reduce using rule 42 (Expr)


State 104

   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   49     | Expr NE Expr •
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr

    MUL    shift, and go to state 61
    DIV    shift, and go to state 63
    GE     shift, and go to state 65
    GT     shift, and go to state 66
    LE     shift, and go to state 67
    LT     shift, and go to state 68
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 70
    PLUS   shift, and go to state 73

    $default  reduce using rule 49 (Expr)


State 105

   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   43     | Expr OR Expr •
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    MUL         shift, and go to state 61
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    PLUS        shift, and go to state 73

    $default  reduce using rule 43 (Expr)


State 106

   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   38     | Expr PLUS Expr •
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr

    MUL  shift, and go to state 61
    DIV  shift, and go to state 63
    MOD  shift, and go to state 70

    $default  reduce using rule 38 (Expr)


State 107

   14 ParameterList: ParameterDeclaration COMMA ParameterList •

    $default  reduce using rule 14 (ParameterList)


State 108

   30 Statement: IF LPAR Expr • RPAR Statement
   31          | IF LPAR Expr • RPAR Statement ELSE Statement
   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 62
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73
    RPAR        shift, and go to state 113


State 109

   32 Statement: WHILE LPAR Expr • RPAR Statement
   36 Expr: Expr • ASSIGN Expr
   37     | Expr • COMMA Expr
   38     | Expr • PLUS Expr
   39     | Expr • MINUS Expr
   40     | Expr • MUL Expr
   41     | Expr • DIV Expr
   42     | Expr • MOD Expr
   43     | Expr • OR Expr
   44     | Expr • AND Expr
   45     | Expr • BITWISEAND Expr
   46     | Expr • BITWISEOR Expr
   47     | Expr • BITWISEXOR Expr
   48     | Expr • EQ Expr
   49     | Expr • NE Expr
   50     | Expr • LE Expr
   51     | Expr • GE Expr
   52     | Expr • LT Expr
   53     | Expr • GT Expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 62
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73
    RPAR        shift, and go to state 114


State 110

   34 Statement: RETURN Expr SEMI •

    $default  reduce using rule 34 (Statement)


State 111

   29 Statement: LBRACE DeclarationsAndStatements RBRACE •

    $default  reduce using rule 29 (Statement)


State 112

   57 Expr: ID LPAR COMMA RPAR •

    $default  reduce using rule 57 (Expr)


State 113

   30 Statement: IF LPAR Expr RPAR • Statement
   31          | IF LPAR Expr RPAR • Statement ELSE Statement

    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Statement  go to state 115
    Expr       go to state 49


State 114

   32 Statement: WHILE LPAR Expr RPAR • Statement

    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Statement  go to state 116
    Expr       go to state 49


State 115

   30 Statement: IF LPAR Expr RPAR Statement •
   31          | IF LPAR Expr RPAR Statement • ELSE Statement

    ELSE  shift, and go to state 117

    $default  reduce using rule 30 (Statement)


State 116

   32 Statement: WHILE LPAR Expr RPAR Statement •

    $default  reduce using rule 32 (Statement)


State 117

   31 Statement: IF LPAR Expr RPAR Statement ELSE • Statement

    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Statement  go to state 118
    Expr       go to state 49


State 118

   31 Statement: IF LPAR Expr RPAR Statement ELSE Statement •

    $default  reduce using rule 31 (Statement)
