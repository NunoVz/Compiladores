Terminals unused in grammar

    RESERVED


Grammar

    0 $accept: Program $end

    1 Program: FunctionsAndDeclarations

    2 FunctionsAndDeclarations: FunctionDefinition
    3                         | FunctionDeclaration
    4                         | Declaration
    5                         | FunctionsAndDeclarations FunctionDefinition
    6                         | FunctionsAndDeclarations FunctionDeclaration
    7                         | FunctionsAndDeclarations Declaration

    8 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

    9 FunctionBody: LBRACE DeclarationsAndStatements RBRACE

   10 DeclarationsAndStatements: StatementOrDeclaration DeclarationsAndStatements
   11                          | SEMI DeclarationsAndStatements
   12                          | ε

   13 StatementOrDeclaration: Statement
   14                       | Declaration

   15 FunctionDeclaration: TypeSpec FunctionDeclarator RBRACE
   16                    | TypeSpec FunctionDeclarator SEMI

   17 FunctionDeclarator: IDToken LPAR ParameterList RPAR

   18 ParameterList: ParameterListAux

   19 ParameterListAux: ParameterDeclaration COMMA ParameterListAux
   20                 | ParameterDeclaration

   21 ParameterDeclaration: TypeSpec ID
   22                     | TypeSpec

   23 Declaration: TypeSpec DeclaratorAux SEMI
   24            | error SEMI

   25 DeclaratorAux: DeclaratorAux COMMA Declarator
   26              | Declarator

   27 TypeSpec: CHAR
   28         | INT
   29         | VOID
   30         | SHORT
   31         | DOUBLE

   32 Declarator: IDToken
   33           | IDToken ASSIGN Expr

   34 Statement: LBRACE StatementList RBRACE
   35          | IF LPAR Expr RPAR StatementAux
   36          | IF LPAR Expr RPAR StatementAux ELSE StatementAux
   37          | WHILE LPAR Expr RPAR StatementAux
   38          | RETURN SEMI
   39          | RETURN Expr SEMI
   40          | Expr SEMI
   41          | LBRACE error RBRACE

   42 StatementList: StatementAux StatementList
   43              | StatementAux

   44 StatementAux: Statement
   45             | error SEMI
   46             | SEMI
   47             | LBRACE RBRACE

   48 FunctionCall: ID LPAR RPAR
   49             | ID LPAR FuncCallAux RPAR
   50             | ID LPAR error RPAR

   51 FuncCallAux: Expr
   52            | FuncCallAux COMMA Expr

   53 Expr: Expr ASSIGN Expr
   54     | Expr PLUS Expr
   55     | Expr MINUS Expr
   56     | Expr MUL Expr
   57     | Expr DIV Expr
   58     | Expr MOD Expr
   59     | Expr OR Expr
   60     | Expr AND Expr
   61     | Expr BITWISEAND Expr
   62     | Expr BITWISEOR Expr
   63     | Expr BITWISEXOR Expr
   64     | Expr EQ Expr
   65     | Expr NE Expr
   66     | Expr LE Expr
   67     | Expr GE Expr
   68     | Expr LT Expr
   69     | Expr GT Expr
   70     | LPAR Expr COMMA Expr RPAR
   71     | PLUS Expr
   72     | MINUS Expr
   73     | NOT Expr
   74     | FunctionCall
   75     | ID
   76     | NATURAL
   77     | CHRLIT
   78     | DECIMAL
   79     | LPAR Expr RPAR
   80     | LPAR error RPAR

   81 IDToken: ID


Terminals, with rules where they appear

    $end (0) 0
    error (256) 24 41 45 50 80
    RESERVED (258)
    IF (259) 35 36
    INT (260) 28
    SHORT (261) 30
    DOUBLE (262) 31
    CHAR (263) 27
    ELSE (264) 36
    WHILE (265) 37
    RETURN (266) 38 39
    VOID (267) 29
    BITWISEAND (268) 61
    BITWISEOR (269) 62
    BITWISEXOR (270) 63
    AND (271) 60
    ASSIGN (272) 33 53
    MUL (273) 56
    COMMA (274) 19 25 52 70
    DIV (275) 57
    EQ (276) 64
    GE (277) 67
    GT (278) 69
    LBRACE (279) 9 34 41 47
    LE (280) 66
    LPAR (281) 17 35 36 37 48 49 50 70 79 80
    LT (282) 68
    MINUS (283) 55 72
    MOD (284) 58
    NE (285) 65
    NOT (286) 73
    OR (287) 59
    PLUS (288) 54 71
    RBRACE (289) 9 15 34 41 47
    RPAR (290) 17 35 36 37 48 49 50 70 79 80
    SEMI (291) 11 16 23 24 38 39 40 45 46
    ID <value> (292) 21 48 49 50 75 81
    NATURAL <value> (293) 76
    DECIMAL <value> (294) 78
    CHRLIT <value> (295) 77
    NO_ELSE (296)
    MAX_PREC (297)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    Program <no> (44)
        on left: 1
        on right: 0
    FunctionsAndDeclarations <no> (45)
        on left: 2 3 4 5 6 7
        on right: 1 5 6 7
    FunctionDefinition <no> (46)
        on left: 8
        on right: 2 5
    FunctionBody <no> (47)
        on left: 9
        on right: 8
    DeclarationsAndStatements <no> (48)
        on left: 10 11 12
        on right: 9 10 11
    StatementOrDeclaration <no> (49)
        on left: 13 14
        on right: 10
    FunctionDeclaration <no> (50)
        on left: 15 16
        on right: 3 6
    FunctionDeclarator <no> (51)
        on left: 17
        on right: 8 15 16
    ParameterList <no> (52)
        on left: 18
        on right: 17
    ParameterListAux <no> (53)
        on left: 19 20
        on right: 18 19
    ParameterDeclaration <no> (54)
        on left: 21 22
        on right: 19 20
    Declaration <no> (55)
        on left: 23 24
        on right: 4 7 14
    DeclaratorAux <no> (56)
        on left: 25 26
        on right: 23 25
    TypeSpec <no> (57)
        on left: 27 28 29 30 31
        on right: 8 15 16 21 22 23
    Declarator <no> (58)
        on left: 32 33
        on right: 25 26
    Statement <no> (59)
        on left: 34 35 36 37 38 39 40 41
        on right: 13 44
    StatementList <no> (60)
        on left: 42 43
        on right: 34 42
    StatementAux <no> (61)
        on left: 44 45 46 47
        on right: 35 36 37 42 43
    FunctionCall <no> (62)
        on left: 48 49 50
        on right: 74
    FuncCallAux <no> (63)
        on left: 51 52
        on right: 49 52
    Expr <no> (64)
        on left: 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75 76 77 78 79 80
        on right: 33 35 36 37 39 40 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 79
    IDToken <no> (65)
        on left: 81
        on right: 17 32 33


State 0

    0 $accept: • Program $end

    error   shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    CHAR    shift, and go to state 5
    VOID    shift, and go to state 6

    Program                   go to state 7
    FunctionsAndDeclarations  go to state 8
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 1

   24 Declaration: error • SEMI

    SEMI  shift, and go to state 13


State 2

   28 TypeSpec: INT •

    $default  reduce using rule 28 (TypeSpec)


State 3

   30 TypeSpec: SHORT •

    $default  reduce using rule 30 (TypeSpec)


State 4

   31 TypeSpec: DOUBLE •

    $default  reduce using rule 31 (TypeSpec)


State 5

   27 TypeSpec: CHAR •

    $default  reduce using rule 27 (TypeSpec)


State 6

   29 TypeSpec: VOID •

    $default  reduce using rule 29 (TypeSpec)


State 7

    0 $accept: Program • $end

    $end  shift, and go to state 14


State 8

    1 Program: FunctionsAndDeclarations •
    5 FunctionsAndDeclarations: FunctionsAndDeclarations • FunctionDefinition
    6                         | FunctionsAndDeclarations • FunctionDeclaration
    7                         | FunctionsAndDeclarations • Declaration

    error   shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    CHAR    shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 1 (Program)

    FunctionDefinition   go to state 15
    FunctionDeclaration  go to state 16
    Declaration          go to state 17
    TypeSpec             go to state 12


State 9

    2 FunctionsAndDeclarations: FunctionDefinition •

    $default  reduce using rule 2 (FunctionsAndDeclarations)


State 10

    3 FunctionsAndDeclarations: FunctionDeclaration •

    $default  reduce using rule 3 (FunctionsAndDeclarations)


State 11

    4 FunctionsAndDeclarations: Declaration •

    $default  reduce using rule 4 (FunctionsAndDeclarations)


State 12

    8 FunctionDefinition: TypeSpec • FunctionDeclarator FunctionBody
   15 FunctionDeclaration: TypeSpec • FunctionDeclarator RBRACE
   16                    | TypeSpec • FunctionDeclarator SEMI
   23 Declaration: TypeSpec • DeclaratorAux SEMI

    ID  shift, and go to state 18

    FunctionDeclarator  go to state 19
    DeclaratorAux       go to state 20
    Declarator          go to state 21
    IDToken             go to state 22


State 13

   24 Declaration: error SEMI •

    $default  reduce using rule 24 (Declaration)


State 14

    0 $accept: Program $end •

    $default  accept


State 15

    5 FunctionsAndDeclarations: FunctionsAndDeclarations FunctionDefinition •

    $default  reduce using rule 5 (FunctionsAndDeclarations)


State 16

    6 FunctionsAndDeclarations: FunctionsAndDeclarations FunctionDeclaration •

    $default  reduce using rule 6 (FunctionsAndDeclarations)


State 17

    7 FunctionsAndDeclarations: FunctionsAndDeclarations Declaration •

    $default  reduce using rule 7 (FunctionsAndDeclarations)


State 18

   81 IDToken: ID •

    $default  reduce using rule 81 (IDToken)


State 19

    8 FunctionDefinition: TypeSpec FunctionDeclarator • FunctionBody
   15 FunctionDeclaration: TypeSpec FunctionDeclarator • RBRACE
   16                    | TypeSpec FunctionDeclarator • SEMI

    LBRACE  shift, and go to state 23
    RBRACE  shift, and go to state 24
    SEMI    shift, and go to state 25

    FunctionBody  go to state 26


State 20

   23 Declaration: TypeSpec DeclaratorAux • SEMI
   25 DeclaratorAux: DeclaratorAux • COMMA Declarator

    COMMA  shift, and go to state 27
    SEMI   shift, and go to state 28


State 21

   26 DeclaratorAux: Declarator •

    $default  reduce using rule 26 (DeclaratorAux)


State 22

   17 FunctionDeclarator: IDToken • LPAR ParameterList RPAR
   32 Declarator: IDToken •
   33           | IDToken • ASSIGN Expr

    ASSIGN  shift, and go to state 29
    LPAR    shift, and go to state 30

    $default  reduce using rule 32 (Declarator)


State 23

    9 FunctionBody: LBRACE • DeclarationsAndStatements RBRACE

    error    shift, and go to state 1
    IF       shift, and go to state 31
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    CHAR     shift, and go to state 5
    WHILE    shift, and go to state 32
    RETURN   shift, and go to state 33
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 34
    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    SEMI     shift, and go to state 39
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    RBRACE  reduce using rule 12 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 44
    StatementOrDeclaration     go to state 45
    Declaration                go to state 46
    TypeSpec                   go to state 47
    Statement                  go to state 48
    FunctionCall               go to state 49
    Expr                       go to state 50


State 24

   15 FunctionDeclaration: TypeSpec FunctionDeclarator RBRACE •

    $default  reduce using rule 15 (FunctionDeclaration)


State 25

   16 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI •

    $default  reduce using rule 16 (FunctionDeclaration)


State 26

    8 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody •

    $default  reduce using rule 8 (FunctionDefinition)


State 27

   25 DeclaratorAux: DeclaratorAux COMMA • Declarator

    ID  shift, and go to state 18

    Declarator  go to state 51
    IDToken     go to state 52


State 28

   23 Declaration: TypeSpec DeclaratorAux SEMI •

    $default  reduce using rule 23 (Declaration)


State 29

   33 Declarator: IDToken ASSIGN • Expr

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 53


State 30

   17 FunctionDeclarator: IDToken LPAR • ParameterList RPAR

    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    CHAR    shift, and go to state 5
    VOID    shift, and go to state 6

    ParameterList         go to state 54
    ParameterListAux      go to state 55
    ParameterDeclaration  go to state 56
    TypeSpec              go to state 57


State 31

   35 Statement: IF • LPAR Expr RPAR StatementAux
   36          | IF • LPAR Expr RPAR StatementAux ELSE StatementAux

    LPAR  shift, and go to state 58


State 32

   37 Statement: WHILE • LPAR Expr RPAR StatementAux

    LPAR  shift, and go to state 59


State 33

   38 Statement: RETURN • SEMI
   39          | RETURN • Expr SEMI

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    SEMI     shift, and go to state 60
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 61


State 34

   34 Statement: LBRACE • StatementList RBRACE
   41          | LBRACE • error RBRACE

    error    shift, and go to state 62
    IF       shift, and go to state 31
    WHILE    shift, and go to state 32
    RETURN   shift, and go to state 33
    LBRACE   shift, and go to state 63
    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    SEMI     shift, and go to state 64
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    Statement      go to state 65
    StatementList  go to state 66
    StatementAux   go to state 67
    FunctionCall   go to state 49
    Expr           go to state 50


State 35

   70 Expr: LPAR • Expr COMMA Expr RPAR
   79     | LPAR • Expr RPAR
   80     | LPAR • error RPAR

    error    shift, and go to state 68
    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 69


State 36

   72 Expr: MINUS • Expr

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 70


State 37

   73 Expr: NOT • Expr

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 71


State 38

   71 Expr: PLUS • Expr

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 72


State 39

   11 DeclarationsAndStatements: SEMI • DeclarationsAndStatements

    error    shift, and go to state 1
    IF       shift, and go to state 31
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    CHAR     shift, and go to state 5
    WHILE    shift, and go to state 32
    RETURN   shift, and go to state 33
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 34
    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    SEMI     shift, and go to state 39
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    RBRACE  reduce using rule 12 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 73
    StatementOrDeclaration     go to state 45
    Declaration                go to state 46
    TypeSpec                   go to state 47
    Statement                  go to state 48
    FunctionCall               go to state 49
    Expr                       go to state 50


State 40

   48 FunctionCall: ID • LPAR RPAR
   49             | ID • LPAR FuncCallAux RPAR
   50             | ID • LPAR error RPAR
   75 Expr: ID •

    LPAR  shift, and go to state 74

    $default  reduce using rule 75 (Expr)


State 41

   76 Expr: NATURAL •

    $default  reduce using rule 76 (Expr)


State 42

   78 Expr: DECIMAL •

    $default  reduce using rule 78 (Expr)


State 43

   77 Expr: CHRLIT •

    $default  reduce using rule 77 (Expr)


State 44

    9 FunctionBody: LBRACE DeclarationsAndStatements • RBRACE

    RBRACE  shift, and go to state 75


State 45

   10 DeclarationsAndStatements: StatementOrDeclaration • DeclarationsAndStatements

    error    shift, and go to state 1
    IF       shift, and go to state 31
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    CHAR     shift, and go to state 5
    WHILE    shift, and go to state 32
    RETURN   shift, and go to state 33
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 34
    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    SEMI     shift, and go to state 39
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    RBRACE  reduce using rule 12 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 76
    StatementOrDeclaration     go to state 45
    Declaration                go to state 46
    TypeSpec                   go to state 47
    Statement                  go to state 48
    FunctionCall               go to state 49
    Expr                       go to state 50


State 46

   14 StatementOrDeclaration: Declaration •

    $default  reduce using rule 14 (StatementOrDeclaration)


State 47

   23 Declaration: TypeSpec • DeclaratorAux SEMI

    ID  shift, and go to state 18

    DeclaratorAux  go to state 20
    Declarator     go to state 21
    IDToken        go to state 52


State 48

   13 StatementOrDeclaration: Statement •

    $default  reduce using rule 13 (StatementOrDeclaration)


State 49

   74 Expr: FunctionCall •

    $default  reduce using rule 74 (Expr)


State 50

   40 Statement: Expr • SEMI
   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr

    BITWISEAND  shift, and go to state 77
    BITWISEOR   shift, and go to state 78
    BITWISEXOR  shift, and go to state 79
    AND         shift, and go to state 80
    ASSIGN      shift, and go to state 81
    MUL         shift, and go to state 82
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    OR          shift, and go to state 92
    PLUS        shift, and go to state 93
    SEMI        shift, and go to state 94


State 51

   25 DeclaratorAux: DeclaratorAux COMMA Declarator •

    $default  reduce using rule 25 (DeclaratorAux)


State 52

   32 Declarator: IDToken •
   33           | IDToken • ASSIGN Expr

    ASSIGN  shift, and go to state 29

    $default  reduce using rule 32 (Declarator)


State 53

   33 Declarator: IDToken ASSIGN Expr •
   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr

    BITWISEAND  shift, and go to state 77
    BITWISEOR   shift, and go to state 78
    BITWISEXOR  shift, and go to state 79
    AND         shift, and go to state 80
    ASSIGN      shift, and go to state 81
    MUL         shift, and go to state 82
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    OR          shift, and go to state 92
    PLUS        shift, and go to state 93

    $default  reduce using rule 33 (Declarator)


State 54

   17 FunctionDeclarator: IDToken LPAR ParameterList • RPAR

    RPAR  shift, and go to state 95


State 55

   18 ParameterList: ParameterListAux •

    $default  reduce using rule 18 (ParameterList)


State 56

   19 ParameterListAux: ParameterDeclaration • COMMA ParameterListAux
   20                 | ParameterDeclaration •

    COMMA  shift, and go to state 96

    $default  reduce using rule 20 (ParameterListAux)


State 57

   21 ParameterDeclaration: TypeSpec • ID
   22                     | TypeSpec •

    ID  shift, and go to state 97

    $default  reduce using rule 22 (ParameterDeclaration)


State 58

   35 Statement: IF LPAR • Expr RPAR StatementAux
   36          | IF LPAR • Expr RPAR StatementAux ELSE StatementAux

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 98


State 59

   37 Statement: WHILE LPAR • Expr RPAR StatementAux

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 99


State 60

   38 Statement: RETURN SEMI •

    $default  reduce using rule 38 (Statement)


State 61

   39 Statement: RETURN Expr • SEMI
   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr

    BITWISEAND  shift, and go to state 77
    BITWISEOR   shift, and go to state 78
    BITWISEXOR  shift, and go to state 79
    AND         shift, and go to state 80
    ASSIGN      shift, and go to state 81
    MUL         shift, and go to state 82
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    OR          shift, and go to state 92
    PLUS        shift, and go to state 93
    SEMI        shift, and go to state 100


State 62

   41 Statement: LBRACE error • RBRACE
   45 StatementAux: error • SEMI

    RBRACE  shift, and go to state 101
    SEMI    shift, and go to state 102


State 63

   34 Statement: LBRACE • StatementList RBRACE
   41          | LBRACE • error RBRACE
   47 StatementAux: LBRACE • RBRACE

    error    shift, and go to state 62
    IF       shift, and go to state 31
    WHILE    shift, and go to state 32
    RETURN   shift, and go to state 33
    LBRACE   shift, and go to state 63
    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    RBRACE   shift, and go to state 103
    SEMI     shift, and go to state 64
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    Statement      go to state 65
    StatementList  go to state 66
    StatementAux   go to state 67
    FunctionCall   go to state 49
    Expr           go to state 50


State 64

   46 StatementAux: SEMI •

    $default  reduce using rule 46 (StatementAux)


State 65

   44 StatementAux: Statement •

    $default  reduce using rule 44 (StatementAux)


State 66

   34 Statement: LBRACE StatementList • RBRACE

    RBRACE  shift, and go to state 104


State 67

   42 StatementList: StatementAux • StatementList
   43              | StatementAux •

    error    shift, and go to state 105
    IF       shift, and go to state 31
    WHILE    shift, and go to state 32
    RETURN   shift, and go to state 33
    LBRACE   shift, and go to state 63
    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    SEMI     shift, and go to state 64
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    RBRACE  reduce using rule 43 (StatementList)

    Statement      go to state 65
    StatementList  go to state 106
    StatementAux   go to state 67
    FunctionCall   go to state 49
    Expr           go to state 50


State 68

   80 Expr: LPAR error • RPAR

    RPAR  shift, and go to state 107


State 69

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr
   70     | LPAR Expr • COMMA Expr RPAR
   79     | LPAR Expr • RPAR

    BITWISEAND  shift, and go to state 77
    BITWISEOR   shift, and go to state 78
    BITWISEXOR  shift, and go to state 79
    AND         shift, and go to state 80
    ASSIGN      shift, and go to state 81
    MUL         shift, and go to state 82
    COMMA       shift, and go to state 108
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    OR          shift, and go to state 92
    PLUS        shift, and go to state 93
    RPAR        shift, and go to state 109


State 70

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr
   72     | MINUS Expr •

    $default  reduce using rule 72 (Expr)


State 71

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr
   73     | NOT Expr •

    $default  reduce using rule 73 (Expr)


State 72

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr
   71     | PLUS Expr •

    $default  reduce using rule 71 (Expr)


State 73

   11 DeclarationsAndStatements: SEMI DeclarationsAndStatements •

    $default  reduce using rule 11 (DeclarationsAndStatements)


State 74

   48 FunctionCall: ID LPAR • RPAR
   49             | ID LPAR • FuncCallAux RPAR
   50             | ID LPAR • error RPAR

    error    shift, and go to state 110
    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    RPAR     shift, and go to state 111
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    FuncCallAux   go to state 112
    Expr          go to state 113


State 75

    9 FunctionBody: LBRACE DeclarationsAndStatements RBRACE •

    $default  reduce using rule 9 (FunctionBody)


State 76

   10 DeclarationsAndStatements: StatementOrDeclaration DeclarationsAndStatements •

    $default  reduce using rule 10 (DeclarationsAndStatements)


State 77

   61 Expr: Expr BITWISEAND • Expr

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 114


State 78

   62 Expr: Expr BITWISEOR • Expr

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 115


State 79

   63 Expr: Expr BITWISEXOR • Expr

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 116


State 80

   60 Expr: Expr AND • Expr

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 117


State 81

   53 Expr: Expr ASSIGN • Expr

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 118


State 82

   56 Expr: Expr MUL • Expr

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 119


State 83

   57 Expr: Expr DIV • Expr

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 120


State 84

   64 Expr: Expr EQ • Expr

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 121


State 85

   67 Expr: Expr GE • Expr

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 122


State 86

   69 Expr: Expr GT • Expr

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 123


State 87

   66 Expr: Expr LE • Expr

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 124


State 88

   68 Expr: Expr LT • Expr

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 125


State 89

   55 Expr: Expr MINUS • Expr

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 126


State 90

   58 Expr: Expr MOD • Expr

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 127


State 91

   65 Expr: Expr NE • Expr

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 128


State 92

   59 Expr: Expr OR • Expr

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 129


State 93

   54 Expr: Expr PLUS • Expr

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 130


State 94

   40 Statement: Expr SEMI •

    $default  reduce using rule 40 (Statement)


State 95

   17 FunctionDeclarator: IDToken LPAR ParameterList RPAR •

    $default  reduce using rule 17 (FunctionDeclarator)


State 96

   19 ParameterListAux: ParameterDeclaration COMMA • ParameterListAux

    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    CHAR    shift, and go to state 5
    VOID    shift, and go to state 6

    ParameterListAux      go to state 131
    ParameterDeclaration  go to state 56
    TypeSpec              go to state 57


State 97

   21 ParameterDeclaration: TypeSpec ID •

    $default  reduce using rule 21 (ParameterDeclaration)


State 98

   35 Statement: IF LPAR Expr • RPAR StatementAux
   36          | IF LPAR Expr • RPAR StatementAux ELSE StatementAux
   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr

    BITWISEAND  shift, and go to state 77
    BITWISEOR   shift, and go to state 78
    BITWISEXOR  shift, and go to state 79
    AND         shift, and go to state 80
    ASSIGN      shift, and go to state 81
    MUL         shift, and go to state 82
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    OR          shift, and go to state 92
    PLUS        shift, and go to state 93
    RPAR        shift, and go to state 132


State 99

   37 Statement: WHILE LPAR Expr • RPAR StatementAux
   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr

    BITWISEAND  shift, and go to state 77
    BITWISEOR   shift, and go to state 78
    BITWISEXOR  shift, and go to state 79
    AND         shift, and go to state 80
    ASSIGN      shift, and go to state 81
    MUL         shift, and go to state 82
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    OR          shift, and go to state 92
    PLUS        shift, and go to state 93
    RPAR        shift, and go to state 133


State 100

   39 Statement: RETURN Expr SEMI •

    $default  reduce using rule 39 (Statement)


State 101

   41 Statement: LBRACE error RBRACE •

    $default  reduce using rule 41 (Statement)


State 102

   45 StatementAux: error SEMI •

    $default  reduce using rule 45 (StatementAux)


State 103

   47 StatementAux: LBRACE RBRACE •

    $default  reduce using rule 47 (StatementAux)


State 104

   34 Statement: LBRACE StatementList RBRACE •

    $default  reduce using rule 34 (Statement)


State 105

   45 StatementAux: error • SEMI

    SEMI  shift, and go to state 102


State 106

   42 StatementList: StatementAux StatementList •

    $default  reduce using rule 42 (StatementList)


State 107

   80 Expr: LPAR error RPAR •

    $default  reduce using rule 80 (Expr)


State 108

   70 Expr: LPAR Expr COMMA • Expr RPAR

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 134


State 109

   79 Expr: LPAR Expr RPAR •

    $default  reduce using rule 79 (Expr)


State 110

   50 FunctionCall: ID LPAR error • RPAR

    RPAR  shift, and go to state 135


State 111

   48 FunctionCall: ID LPAR RPAR •

    $default  reduce using rule 48 (FunctionCall)


State 112

   49 FunctionCall: ID LPAR FuncCallAux • RPAR
   52 FuncCallAux: FuncCallAux • COMMA Expr

    COMMA  shift, and go to state 136
    RPAR   shift, and go to state 137


State 113

   51 FuncCallAux: Expr •
   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr

    BITWISEAND  shift, and go to state 77
    BITWISEOR   shift, and go to state 78
    BITWISEXOR  shift, and go to state 79
    AND         shift, and go to state 80
    ASSIGN      shift, and go to state 81
    MUL         shift, and go to state 82
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    OR          shift, and go to state 92
    PLUS        shift, and go to state 93

    $default  reduce using rule 51 (FuncCallAux)


State 114

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   61     | Expr BITWISEAND Expr •
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr

    MUL    shift, and go to state 82
    DIV    shift, and go to state 83
    EQ     shift, and go to state 84
    GE     shift, and go to state 85
    GT     shift, and go to state 86
    LE     shift, and go to state 87
    LT     shift, and go to state 88
    MINUS  shift, and go to state 89
    MOD    shift, and go to state 90
    NE     shift, and go to state 91
    PLUS   shift, and go to state 93

    $default  reduce using rule 61 (Expr)


State 115

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   62     | Expr BITWISEOR Expr •
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr

    BITWISEAND  shift, and go to state 77
    BITWISEXOR  shift, and go to state 79
    MUL         shift, and go to state 82
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    PLUS        shift, and go to state 93

    $default  reduce using rule 62 (Expr)


State 116

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   63     | Expr BITWISEXOR Expr •
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr

    BITWISEAND  shift, and go to state 77
    MUL         shift, and go to state 82
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    PLUS        shift, and go to state 93

    $default  reduce using rule 63 (Expr)


State 117

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   60     | Expr AND Expr •
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr

    BITWISEAND  shift, and go to state 77
    BITWISEOR   shift, and go to state 78
    BITWISEXOR  shift, and go to state 79
    MUL         shift, and go to state 82
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    PLUS        shift, and go to state 93

    $default  reduce using rule 60 (Expr)


State 118

   53 Expr: Expr • ASSIGN Expr
   53     | Expr ASSIGN Expr •
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr

    BITWISEAND  shift, and go to state 77
    BITWISEOR   shift, and go to state 78
    BITWISEXOR  shift, and go to state 79
    AND         shift, and go to state 80
    ASSIGN      shift, and go to state 81
    MUL         shift, and go to state 82
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    OR          shift, and go to state 92
    PLUS        shift, and go to state 93

    $default  reduce using rule 53 (Expr)


State 119

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   56     | Expr MUL Expr •
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr

    $default  reduce using rule 56 (Expr)


State 120

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   57     | Expr DIV Expr •
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr

    $default  reduce using rule 57 (Expr)


State 121

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   64     | Expr EQ Expr •
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr

    MUL    shift, and go to state 82
    DIV    shift, and go to state 83
    GE     shift, and go to state 85
    GT     shift, and go to state 86
    LE     shift, and go to state 87
    LT     shift, and go to state 88
    MINUS  shift, and go to state 89
    MOD    shift, and go to state 90
    PLUS   shift, and go to state 93

    $default  reduce using rule 64 (Expr)


State 122

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   67     | Expr GE Expr •
   68     | Expr • LT Expr
   69     | Expr • GT Expr

    MUL    shift, and go to state 82
    DIV    shift, and go to state 83
    MINUS  shift, and go to state 89
    MOD    shift, and go to state 90
    PLUS   shift, and go to state 93

    $default  reduce using rule 67 (Expr)


State 123

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr
   69     | Expr GT Expr •

    MUL    shift, and go to state 82
    DIV    shift, and go to state 83
    MINUS  shift, and go to state 89
    MOD    shift, and go to state 90
    PLUS   shift, and go to state 93

    $default  reduce using rule 69 (Expr)


State 124

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   66     | Expr LE Expr •
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr

    MUL    shift, and go to state 82
    DIV    shift, and go to state 83
    MINUS  shift, and go to state 89
    MOD    shift, and go to state 90
    PLUS   shift, and go to state 93

    $default  reduce using rule 66 (Expr)


State 125

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   68     | Expr LT Expr •
   69     | Expr • GT Expr

    MUL    shift, and go to state 82
    DIV    shift, and go to state 83
    MINUS  shift, and go to state 89
    MOD    shift, and go to state 90
    PLUS   shift, and go to state 93

    $default  reduce using rule 68 (Expr)


State 126

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   55     | Expr MINUS Expr •
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr

    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 90

    $default  reduce using rule 55 (Expr)


State 127

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   58     | Expr MOD Expr •
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr

    $default  reduce using rule 58 (Expr)


State 128

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   65     | Expr NE Expr •
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr

    MUL    shift, and go to state 82
    DIV    shift, and go to state 83
    GE     shift, and go to state 85
    GT     shift, and go to state 86
    LE     shift, and go to state 87
    LT     shift, and go to state 88
    MINUS  shift, and go to state 89
    MOD    shift, and go to state 90
    PLUS   shift, and go to state 93

    $default  reduce using rule 65 (Expr)


State 129

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   59     | Expr OR Expr •
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr

    BITWISEAND  shift, and go to state 77
    BITWISEOR   shift, and go to state 78
    BITWISEXOR  shift, and go to state 79
    AND         shift, and go to state 80
    MUL         shift, and go to state 82
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    PLUS        shift, and go to state 93

    $default  reduce using rule 59 (Expr)


State 130

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   54     | Expr PLUS Expr •
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr

    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 90

    $default  reduce using rule 54 (Expr)


State 131

   19 ParameterListAux: ParameterDeclaration COMMA ParameterListAux •

    $default  reduce using rule 19 (ParameterListAux)


State 132

   35 Statement: IF LPAR Expr RPAR • StatementAux
   36          | IF LPAR Expr RPAR • StatementAux ELSE StatementAux

    error    shift, and go to state 105
    IF       shift, and go to state 31
    WHILE    shift, and go to state 32
    RETURN   shift, and go to state 33
    LBRACE   shift, and go to state 63
    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    SEMI     shift, and go to state 64
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    Statement     go to state 65
    StatementAux  go to state 138
    FunctionCall  go to state 49
    Expr          go to state 50


State 133

   37 Statement: WHILE LPAR Expr RPAR • StatementAux

    error    shift, and go to state 105
    IF       shift, and go to state 31
    WHILE    shift, and go to state 32
    RETURN   shift, and go to state 33
    LBRACE   shift, and go to state 63
    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    SEMI     shift, and go to state 64
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    Statement     go to state 65
    StatementAux  go to state 139
    FunctionCall  go to state 49
    Expr          go to state 50


State 134

   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr
   70     | LPAR Expr COMMA Expr • RPAR

    BITWISEAND  shift, and go to state 77
    BITWISEOR   shift, and go to state 78
    BITWISEXOR  shift, and go to state 79
    AND         shift, and go to state 80
    ASSIGN      shift, and go to state 81
    MUL         shift, and go to state 82
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    OR          shift, and go to state 92
    PLUS        shift, and go to state 93
    RPAR        shift, and go to state 140


State 135

   50 FunctionCall: ID LPAR error RPAR •

    $default  reduce using rule 50 (FunctionCall)


State 136

   52 FuncCallAux: FuncCallAux COMMA • Expr

    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    FunctionCall  go to state 49
    Expr          go to state 141


State 137

   49 FunctionCall: ID LPAR FuncCallAux RPAR •

    $default  reduce using rule 49 (FunctionCall)


State 138

   35 Statement: IF LPAR Expr RPAR StatementAux •
   36          | IF LPAR Expr RPAR StatementAux • ELSE StatementAux

    ELSE  shift, and go to state 142

    $default  reduce using rule 35 (Statement)


State 139

   37 Statement: WHILE LPAR Expr RPAR StatementAux •

    $default  reduce using rule 37 (Statement)


State 140

   70 Expr: LPAR Expr COMMA Expr RPAR •

    $default  reduce using rule 70 (Expr)


State 141

   52 FuncCallAux: FuncCallAux COMMA Expr •
   53 Expr: Expr • ASSIGN Expr
   54     | Expr • PLUS Expr
   55     | Expr • MINUS Expr
   56     | Expr • MUL Expr
   57     | Expr • DIV Expr
   58     | Expr • MOD Expr
   59     | Expr • OR Expr
   60     | Expr • AND Expr
   61     | Expr • BITWISEAND Expr
   62     | Expr • BITWISEOR Expr
   63     | Expr • BITWISEXOR Expr
   64     | Expr • EQ Expr
   65     | Expr • NE Expr
   66     | Expr • LE Expr
   67     | Expr • GE Expr
   68     | Expr • LT Expr
   69     | Expr • GT Expr

    BITWISEAND  shift, and go to state 77
    BITWISEOR   shift, and go to state 78
    BITWISEXOR  shift, and go to state 79
    AND         shift, and go to state 80
    ASSIGN      shift, and go to state 81
    MUL         shift, and go to state 82
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    OR          shift, and go to state 92
    PLUS        shift, and go to state 93

    $default  reduce using rule 52 (FuncCallAux)


State 142

   36 Statement: IF LPAR Expr RPAR StatementAux ELSE • StatementAux

    error    shift, and go to state 105
    IF       shift, and go to state 31
    WHILE    shift, and go to state 32
    RETURN   shift, and go to state 33
    LBRACE   shift, and go to state 63
    LPAR     shift, and go to state 35
    MINUS    shift, and go to state 36
    NOT      shift, and go to state 37
    PLUS     shift, and go to state 38
    SEMI     shift, and go to state 64
    ID       shift, and go to state 40
    NATURAL  shift, and go to state 41
    DECIMAL  shift, and go to state 42
    CHRLIT   shift, and go to state 43

    Statement     go to state 65
    StatementAux  go to state 143
    FunctionCall  go to state 49
    Expr          go to state 50


State 143

   36 Statement: IF LPAR Expr RPAR StatementAux ELSE StatementAux •

    $default  reduce using rule 36 (Statement)
