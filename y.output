Terminals unused in grammar

    RESERVED


Grammar

    0 $accept: Program $end

    1 Program: FunctionsAndDeclarations

    2 FunctionsAndDeclarations: FunctionDefinition FunctionsAndDeclarationsList
    3                         | FunctionDeclaration FunctionsAndDeclarationsList
    4                         | Declaration FunctionsAndDeclarationsList

    5 FunctionsAndDeclarationsList: FunctionsAndDeclarations
    6                             | ε

    7 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

    8 FunctionBody: LBRACE DeclarationsAndStatements RBRACE
    9             | LBRACE RBRACE

   10 DeclarationsAndStatements: Statement DeclarationsAndStatements
   11                          | Declaration DeclarationsAndStatements
   12                          | Statement
   13                          | Declaration

   14 FunctionDeclaration: TypeSpec FunctionDeclarator RBRACE
   15                    | TypeSpec FunctionDeclarator SEMI

   16 FunctionDeclarator: IDToken LPAR ParameterList RPAR

   17 ParameterList: ParameterListAux

   18 ParameterListAux: ParameterDeclaration COMMA ParameterListAux
   19                 | ParameterDeclaration

   20 ParameterDeclaration: TypeSpec ID
   21                     | TypeSpec

   22 Declaration: TypeSpec DeclaratorAux SEMI
   23            | error SEMI

   24 DeclaratorAux: DeclaratorAux COMMA Declarator
   25              | Declarator

   26 TypeSpec: CHAR
   27         | INT
   28         | VOID
   29         | SHORT
   30         | DOUBLE

   31 Declarator: IDToken
   32           | IDToken ASSIGN ExprAux

   33 Statement: LBRACE StatementList RBRACE
   34          | IF LPAR ExprAux RPAR StatementAux
   35          | IF LPAR ExprAux RPAR StatementAux ELSE StatementAux
   36          | WHILE LPAR ExprAux RPAR Statement
   37          | RETURN SEMI
   38          | RETURN ExprAux SEMI
   39          | ExprAux SEMI
   40          | LBRACE RBRACE
   41          | LBRACE error RBRACE
   42          | SEMI

   43 StatementList: StatementAux StatementList
   44              | StatementAux

   45 StatementAux: Statement
   46             | error SEMI

   47 Expr: Expr ASSIGN Expr
   48     | Expr PLUS Expr
   49     | Expr MINUS Expr
   50     | Expr MUL Expr
   51     | Expr DIV Expr
   52     | Expr MOD Expr
   53     | Expr OR Expr
   54     | Expr AND Expr
   55     | Expr BITWISEAND Expr
   56     | Expr BITWISEOR Expr
   57     | Expr BITWISEXOR Expr
   58     | Expr EQ Expr
   59     | Expr NE Expr
   60     | Expr LE Expr
   61     | Expr GE Expr
   62     | Expr LT Expr
   63     | Expr GT Expr
   64     | PLUS Expr
   65     | MINUS Expr
   66     | NOT Expr
   67     | ID LPAR Expr ExprAuxAux RPAR
   68     | ID LPAR RPAR
   69     | ID
   70     | NATURAL
   71     | CHRLIT
   72     | DECIMAL
   73     | LPAR ExprAux RPAR
   74     | LPAR error RPAR
   75     | ID LPAR error RPAR

   76 ExprAux: ExprAux COMMA Expr
   77        | Expr

   78 ExprAuxAux: COMMA Expr ExprAuxAux
   79           | ε

   80 IDToken: ID


Terminals, with rules where they appear

    $end (0) 0
    error (256) 23 41 46 74 75
    RESERVED (258)
    IF (259) 34 35
    INT (260) 27
    SHORT (261) 29
    DOUBLE (262) 30
    CHAR (263) 26
    ELSE (264) 35
    WHILE (265) 36
    RETURN (266) 37 38
    VOID (267) 28
    BITWISEAND (268) 55
    BITWISEOR (269) 56
    BITWISEXOR (270) 57
    AND (271) 54
    ASSIGN (272) 32 47
    MUL (273) 50
    COMMA (274) 18 24 76 78
    DIV (275) 51
    EQ (276) 58
    GE (277) 61
    GT (278) 63
    LBRACE (279) 8 9 33 40 41
    LE (280) 60
    LPAR (281) 16 34 35 36 67 68 73 74 75
    LT (282) 62
    MINUS (283) 49 65
    MOD (284) 52
    NE (285) 59
    NOT (286) 66
    OR (287) 53
    PLUS (288) 48 64
    RBRACE (289) 8 9 14 33 40 41
    RPAR (290) 16 34 35 36 67 68 73 74 75
    SEMI (291) 15 22 23 37 38 39 42 46
    ID <value> (292) 20 67 68 69 75 80
    NATURAL <value> (293) 70
    DECIMAL <value> (294) 72
    CHRLIT <value> (295) 71
    NO_ELSE (296)
    MAX_PREC (297)


Nonterminals, with rules where they appear

    $accept (43)
        on left: 0
    Program <no> (44)
        on left: 1
        on right: 0
    FunctionsAndDeclarations <no> (45)
        on left: 2 3 4
        on right: 1 5
    FunctionsAndDeclarationsList <no> (46)
        on left: 5 6
        on right: 2 3 4
    FunctionDefinition <no> (47)
        on left: 7
        on right: 2
    FunctionBody <no> (48)
        on left: 8 9
        on right: 7
    DeclarationsAndStatements <no> (49)
        on left: 10 11 12 13
        on right: 8 10 11
    FunctionDeclaration <no> (50)
        on left: 14 15
        on right: 3
    FunctionDeclarator <no> (51)
        on left: 16
        on right: 7 14 15
    ParameterList <no> (52)
        on left: 17
        on right: 16
    ParameterListAux <no> (53)
        on left: 18 19
        on right: 17 18
    ParameterDeclaration <no> (54)
        on left: 20 21
        on right: 18 19
    Declaration <no> (55)
        on left: 22 23
        on right: 4 11 13
    DeclaratorAux <no> (56)
        on left: 24 25
        on right: 22 24
    TypeSpec <no> (57)
        on left: 26 27 28 29 30
        on right: 7 14 15 20 21 22
    Declarator <no> (58)
        on left: 31 32
        on right: 24 25
    Statement <no> (59)
        on left: 33 34 35 36 37 38 39 40 41 42
        on right: 10 12 36 45
    StatementList <no> (60)
        on left: 43 44
        on right: 33 43
    StatementAux <no> (61)
        on left: 45 46
        on right: 34 35 43 44
    Expr <no> (62)
        on left: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 71 72 73 74 75
        on right: 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67 76 77 78
    ExprAux <no> (63)
        on left: 76 77
        on right: 32 34 35 36 38 39 73 76
    ExprAuxAux <no> (64)
        on left: 78 79
        on right: 67 78
    IDToken <no> (65)
        on left: 80
        on right: 16 31 32


State 0

    0 $accept: • Program $end

    error   shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    CHAR    shift, and go to state 5
    VOID    shift, and go to state 6

    Program                   go to state 7
    FunctionsAndDeclarations  go to state 8
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 1

   23 Declaration: error • SEMI

    SEMI  shift, and go to state 13


State 2

   27 TypeSpec: INT •

    $default  reduce using rule 27 (TypeSpec)


State 3

   29 TypeSpec: SHORT •

    $default  reduce using rule 29 (TypeSpec)


State 4

   30 TypeSpec: DOUBLE •

    $default  reduce using rule 30 (TypeSpec)


State 5

   26 TypeSpec: CHAR •

    $default  reduce using rule 26 (TypeSpec)


State 6

   28 TypeSpec: VOID •

    $default  reduce using rule 28 (TypeSpec)


State 7

    0 $accept: Program • $end

    $end  shift, and go to state 14


State 8

    1 Program: FunctionsAndDeclarations •

    $default  reduce using rule 1 (Program)


State 9

    2 FunctionsAndDeclarations: FunctionDefinition • FunctionsAndDeclarationsList

    error   shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    CHAR    shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 6 (FunctionsAndDeclarationsList)

    FunctionsAndDeclarations      go to state 15
    FunctionsAndDeclarationsList  go to state 16
    FunctionDefinition            go to state 9
    FunctionDeclaration           go to state 10
    Declaration                   go to state 11
    TypeSpec                      go to state 12


State 10

    3 FunctionsAndDeclarations: FunctionDeclaration • FunctionsAndDeclarationsList

    error   shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    CHAR    shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 6 (FunctionsAndDeclarationsList)

    FunctionsAndDeclarations      go to state 15
    FunctionsAndDeclarationsList  go to state 17
    FunctionDefinition            go to state 9
    FunctionDeclaration           go to state 10
    Declaration                   go to state 11
    TypeSpec                      go to state 12


State 11

    4 FunctionsAndDeclarations: Declaration • FunctionsAndDeclarationsList

    error   shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    CHAR    shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 6 (FunctionsAndDeclarationsList)

    FunctionsAndDeclarations      go to state 15
    FunctionsAndDeclarationsList  go to state 18
    FunctionDefinition            go to state 9
    FunctionDeclaration           go to state 10
    Declaration                   go to state 11
    TypeSpec                      go to state 12


State 12

    7 FunctionDefinition: TypeSpec • FunctionDeclarator FunctionBody
   14 FunctionDeclaration: TypeSpec • FunctionDeclarator RBRACE
   15                    | TypeSpec • FunctionDeclarator SEMI
   22 Declaration: TypeSpec • DeclaratorAux SEMI

    ID  shift, and go to state 19

    FunctionDeclarator  go to state 20
    DeclaratorAux       go to state 21
    Declarator          go to state 22
    IDToken             go to state 23


State 13

   23 Declaration: error SEMI •

    $default  reduce using rule 23 (Declaration)


State 14

    0 $accept: Program $end •

    $default  accept


State 15

    5 FunctionsAndDeclarationsList: FunctionsAndDeclarations •

    $default  reduce using rule 5 (FunctionsAndDeclarationsList)


State 16

    2 FunctionsAndDeclarations: FunctionDefinition FunctionsAndDeclarationsList •

    $default  reduce using rule 2 (FunctionsAndDeclarations)


State 17

    3 FunctionsAndDeclarations: FunctionDeclaration FunctionsAndDeclarationsList •

    $default  reduce using rule 3 (FunctionsAndDeclarations)


State 18

    4 FunctionsAndDeclarations: Declaration FunctionsAndDeclarationsList •

    $default  reduce using rule 4 (FunctionsAndDeclarations)


State 19

   80 IDToken: ID •

    $default  reduce using rule 80 (IDToken)


State 20

    7 FunctionDefinition: TypeSpec FunctionDeclarator • FunctionBody
   14 FunctionDeclaration: TypeSpec FunctionDeclarator • RBRACE
   15                    | TypeSpec FunctionDeclarator • SEMI

    LBRACE  shift, and go to state 24
    RBRACE  shift, and go to state 25
    SEMI    shift, and go to state 26

    FunctionBody  go to state 27


State 21

   22 Declaration: TypeSpec DeclaratorAux • SEMI
   24 DeclaratorAux: DeclaratorAux • COMMA Declarator

    COMMA  shift, and go to state 28
    SEMI   shift, and go to state 29


State 22

   25 DeclaratorAux: Declarator •

    $default  reduce using rule 25 (DeclaratorAux)


State 23

   16 FunctionDeclarator: IDToken • LPAR ParameterList RPAR
   31 Declarator: IDToken •
   32           | IDToken • ASSIGN ExprAux

    ASSIGN  shift, and go to state 30
    LPAR    shift, and go to state 31

    $default  reduce using rule 31 (Declarator)


State 24

    8 FunctionBody: LBRACE • DeclarationsAndStatements RBRACE
    9             | LBRACE • RBRACE

    error    shift, and go to state 1
    IF       shift, and go to state 32
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    CHAR     shift, and go to state 5
    WHILE    shift, and go to state 33
    RETURN   shift, and go to state 34
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 35
    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    RBRACE   shift, and go to state 40
    SEMI     shift, and go to state 41
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    DeclarationsAndStatements  go to state 46
    Declaration                go to state 47
    TypeSpec                   go to state 48
    Statement                  go to state 49
    Expr                       go to state 50
    ExprAux                    go to state 51


State 25

   14 FunctionDeclaration: TypeSpec FunctionDeclarator RBRACE •

    $default  reduce using rule 14 (FunctionDeclaration)


State 26

   15 FunctionDeclaration: TypeSpec FunctionDeclarator SEMI •

    $default  reduce using rule 15 (FunctionDeclaration)


State 27

    7 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody •

    $default  reduce using rule 7 (FunctionDefinition)


State 28

   24 DeclaratorAux: DeclaratorAux COMMA • Declarator

    ID  shift, and go to state 19

    Declarator  go to state 52
    IDToken     go to state 53


State 29

   22 Declaration: TypeSpec DeclaratorAux SEMI •

    $default  reduce using rule 22 (Declaration)


State 30

   32 Declarator: IDToken ASSIGN • ExprAux

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr     go to state 50
    ExprAux  go to state 54


State 31

   16 FunctionDeclarator: IDToken LPAR • ParameterList RPAR

    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    CHAR    shift, and go to state 5
    VOID    shift, and go to state 6

    ParameterList         go to state 55
    ParameterListAux      go to state 56
    ParameterDeclaration  go to state 57
    TypeSpec              go to state 58


State 32

   34 Statement: IF • LPAR ExprAux RPAR StatementAux
   35          | IF • LPAR ExprAux RPAR StatementAux ELSE StatementAux

    LPAR  shift, and go to state 59


State 33

   36 Statement: WHILE • LPAR ExprAux RPAR Statement

    LPAR  shift, and go to state 60


State 34

   37 Statement: RETURN • SEMI
   38          | RETURN • ExprAux SEMI

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    SEMI     shift, and go to state 61
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr     go to state 50
    ExprAux  go to state 62


State 35

   33 Statement: LBRACE • StatementList RBRACE
   40          | LBRACE • RBRACE
   41          | LBRACE • error RBRACE

    error    shift, and go to state 63
    IF       shift, and go to state 32
    WHILE    shift, and go to state 33
    RETURN   shift, and go to state 34
    LBRACE   shift, and go to state 35
    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    RBRACE   shift, and go to state 64
    SEMI     shift, and go to state 41
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Statement      go to state 65
    StatementList  go to state 66
    StatementAux   go to state 67
    Expr           go to state 50
    ExprAux        go to state 51


State 36

   73 Expr: LPAR • ExprAux RPAR
   74     | LPAR • error RPAR

    error    shift, and go to state 68
    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr     go to state 50
    ExprAux  go to state 69


State 37

   65 Expr: MINUS • Expr

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 70


State 38

   66 Expr: NOT • Expr

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 71


State 39

   64 Expr: PLUS • Expr

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 72


State 40

    9 FunctionBody: LBRACE RBRACE •

    $default  reduce using rule 9 (FunctionBody)


State 41

   42 Statement: SEMI •

    $default  reduce using rule 42 (Statement)


State 42

   67 Expr: ID • LPAR Expr ExprAuxAux RPAR
   68     | ID • LPAR RPAR
   69     | ID •
   75     | ID • LPAR error RPAR

    LPAR  shift, and go to state 73

    $default  reduce using rule 69 (Expr)


State 43

   70 Expr: NATURAL •

    $default  reduce using rule 70 (Expr)


State 44

   72 Expr: DECIMAL •

    $default  reduce using rule 72 (Expr)


State 45

   71 Expr: CHRLIT •

    $default  reduce using rule 71 (Expr)


State 46

    8 FunctionBody: LBRACE DeclarationsAndStatements • RBRACE

    RBRACE  shift, and go to state 74


State 47

   11 DeclarationsAndStatements: Declaration • DeclarationsAndStatements
   13                          | Declaration •

    error    shift, and go to state 1
    IF       shift, and go to state 32
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    CHAR     shift, and go to state 5
    WHILE    shift, and go to state 33
    RETURN   shift, and go to state 34
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 35
    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    SEMI     shift, and go to state 41
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    RBRACE  reduce using rule 13 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 75
    Declaration                go to state 47
    TypeSpec                   go to state 48
    Statement                  go to state 49
    Expr                       go to state 50
    ExprAux                    go to state 51


State 48

   22 Declaration: TypeSpec • DeclaratorAux SEMI

    ID  shift, and go to state 19

    DeclaratorAux  go to state 21
    Declarator     go to state 22
    IDToken        go to state 53


State 49

   10 DeclarationsAndStatements: Statement • DeclarationsAndStatements
   12                          | Statement •

    error    shift, and go to state 1
    IF       shift, and go to state 32
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    CHAR     shift, and go to state 5
    WHILE    shift, and go to state 33
    RETURN   shift, and go to state 34
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 35
    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    SEMI     shift, and go to state 41
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    RBRACE  reduce using rule 12 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 76
    Declaration                go to state 47
    TypeSpec                   go to state 48
    Statement                  go to state 49
    Expr                       go to state 50
    ExprAux                    go to state 51


State 50

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   77 ExprAux: Expr •

    BITWISEAND  shift, and go to state 77
    BITWISEOR   shift, and go to state 78
    BITWISEXOR  shift, and go to state 79
    AND         shift, and go to state 80
    ASSIGN      shift, and go to state 81
    MUL         shift, and go to state 82
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    OR          shift, and go to state 92
    PLUS        shift, and go to state 93

    $default  reduce using rule 77 (ExprAux)


State 51

   39 Statement: ExprAux • SEMI
   76 ExprAux: ExprAux • COMMA Expr

    COMMA  shift, and go to state 94
    SEMI   shift, and go to state 95


State 52

   24 DeclaratorAux: DeclaratorAux COMMA Declarator •

    $default  reduce using rule 24 (DeclaratorAux)


State 53

   31 Declarator: IDToken •
   32           | IDToken • ASSIGN ExprAux

    ASSIGN  shift, and go to state 30

    $default  reduce using rule 31 (Declarator)


State 54

   32 Declarator: IDToken ASSIGN ExprAux •
   76 ExprAux: ExprAux • COMMA Expr

    $default  reduce using rule 32 (Declarator)


State 55

   16 FunctionDeclarator: IDToken LPAR ParameterList • RPAR

    RPAR  shift, and go to state 96


State 56

   17 ParameterList: ParameterListAux •

    $default  reduce using rule 17 (ParameterList)


State 57

   18 ParameterListAux: ParameterDeclaration • COMMA ParameterListAux
   19                 | ParameterDeclaration •

    COMMA  shift, and go to state 97

    $default  reduce using rule 19 (ParameterListAux)


State 58

   20 ParameterDeclaration: TypeSpec • ID
   21                     | TypeSpec •

    ID  shift, and go to state 98

    $default  reduce using rule 21 (ParameterDeclaration)


State 59

   34 Statement: IF LPAR • ExprAux RPAR StatementAux
   35          | IF LPAR • ExprAux RPAR StatementAux ELSE StatementAux

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr     go to state 50
    ExprAux  go to state 99


State 60

   36 Statement: WHILE LPAR • ExprAux RPAR Statement

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr     go to state 50
    ExprAux  go to state 100


State 61

   37 Statement: RETURN SEMI •

    $default  reduce using rule 37 (Statement)


State 62

   38 Statement: RETURN ExprAux • SEMI
   76 ExprAux: ExprAux • COMMA Expr

    COMMA  shift, and go to state 94
    SEMI   shift, and go to state 101


State 63

   41 Statement: LBRACE error • RBRACE
   46 StatementAux: error • SEMI

    RBRACE  shift, and go to state 102
    SEMI    shift, and go to state 103


State 64

   40 Statement: LBRACE RBRACE •

    $default  reduce using rule 40 (Statement)


State 65

   45 StatementAux: Statement •

    $default  reduce using rule 45 (StatementAux)


State 66

   33 Statement: LBRACE StatementList • RBRACE

    RBRACE  shift, and go to state 104


State 67

   43 StatementList: StatementAux • StatementList
   44              | StatementAux •

    error    shift, and go to state 105
    IF       shift, and go to state 32
    WHILE    shift, and go to state 33
    RETURN   shift, and go to state 34
    LBRACE   shift, and go to state 35
    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    SEMI     shift, and go to state 41
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    RBRACE  reduce using rule 44 (StatementList)

    Statement      go to state 65
    StatementList  go to state 106
    StatementAux   go to state 67
    Expr           go to state 50
    ExprAux        go to state 51


State 68

   74 Expr: LPAR error • RPAR

    RPAR  shift, and go to state 107


State 69

   73 Expr: LPAR ExprAux • RPAR
   76 ExprAux: ExprAux • COMMA Expr

    COMMA  shift, and go to state 94
    RPAR   shift, and go to state 108


State 70

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   65     | MINUS Expr •

    $default  reduce using rule 65 (Expr)


State 71

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   66     | NOT Expr •

    $default  reduce using rule 66 (Expr)


State 72

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   64     | PLUS Expr •

    $default  reduce using rule 64 (Expr)


State 73

   67 Expr: ID LPAR • Expr ExprAuxAux RPAR
   68     | ID LPAR • RPAR
   75     | ID LPAR • error RPAR

    error    shift, and go to state 109
    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    RPAR     shift, and go to state 110
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 111


State 74

    8 FunctionBody: LBRACE DeclarationsAndStatements RBRACE •

    $default  reduce using rule 8 (FunctionBody)


State 75

   11 DeclarationsAndStatements: Declaration DeclarationsAndStatements •

    $default  reduce using rule 11 (DeclarationsAndStatements)


State 76

   10 DeclarationsAndStatements: Statement DeclarationsAndStatements •

    $default  reduce using rule 10 (DeclarationsAndStatements)


State 77

   55 Expr: Expr BITWISEAND • Expr

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 112


State 78

   56 Expr: Expr BITWISEOR • Expr

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 113


State 79

   57 Expr: Expr BITWISEXOR • Expr

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 114


State 80

   54 Expr: Expr AND • Expr

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 115


State 81

   47 Expr: Expr ASSIGN • Expr

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 116


State 82

   50 Expr: Expr MUL • Expr

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 117


State 83

   51 Expr: Expr DIV • Expr

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 118


State 84

   58 Expr: Expr EQ • Expr

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 119


State 85

   61 Expr: Expr GE • Expr

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 120


State 86

   63 Expr: Expr GT • Expr

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 121


State 87

   60 Expr: Expr LE • Expr

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 122


State 88

   62 Expr: Expr LT • Expr

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 123


State 89

   49 Expr: Expr MINUS • Expr

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 124


State 90

   52 Expr: Expr MOD • Expr

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 125


State 91

   59 Expr: Expr NE • Expr

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 126


State 92

   53 Expr: Expr OR • Expr

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 127


State 93

   48 Expr: Expr PLUS • Expr

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 128


State 94

   76 ExprAux: ExprAux COMMA • Expr

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 129


State 95

   39 Statement: ExprAux SEMI •

    $default  reduce using rule 39 (Statement)


State 96

   16 FunctionDeclarator: IDToken LPAR ParameterList RPAR •

    $default  reduce using rule 16 (FunctionDeclarator)


State 97

   18 ParameterListAux: ParameterDeclaration COMMA • ParameterListAux

    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    CHAR    shift, and go to state 5
    VOID    shift, and go to state 6

    ParameterListAux      go to state 130
    ParameterDeclaration  go to state 57
    TypeSpec              go to state 58


State 98

   20 ParameterDeclaration: TypeSpec ID •

    $default  reduce using rule 20 (ParameterDeclaration)


State 99

   34 Statement: IF LPAR ExprAux • RPAR StatementAux
   35          | IF LPAR ExprAux • RPAR StatementAux ELSE StatementAux
   76 ExprAux: ExprAux • COMMA Expr

    COMMA  shift, and go to state 94
    RPAR   shift, and go to state 131


State 100

   36 Statement: WHILE LPAR ExprAux • RPAR Statement
   76 ExprAux: ExprAux • COMMA Expr

    COMMA  shift, and go to state 94
    RPAR   shift, and go to state 132


State 101

   38 Statement: RETURN ExprAux SEMI •

    $default  reduce using rule 38 (Statement)


State 102

   41 Statement: LBRACE error RBRACE •

    $default  reduce using rule 41 (Statement)


State 103

   46 StatementAux: error SEMI •

    $default  reduce using rule 46 (StatementAux)


State 104

   33 Statement: LBRACE StatementList RBRACE •

    $default  reduce using rule 33 (Statement)


State 105

   46 StatementAux: error • SEMI

    SEMI  shift, and go to state 103


State 106

   43 StatementList: StatementAux StatementList •

    $default  reduce using rule 43 (StatementList)


State 107

   74 Expr: LPAR error RPAR •

    $default  reduce using rule 74 (Expr)


State 108

   73 Expr: LPAR ExprAux RPAR •

    $default  reduce using rule 73 (Expr)


State 109

   75 Expr: ID LPAR error • RPAR

    RPAR  shift, and go to state 133


State 110

   68 Expr: ID LPAR RPAR •

    $default  reduce using rule 68 (Expr)


State 111

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   67     | ID LPAR Expr • ExprAuxAux RPAR

    BITWISEAND  shift, and go to state 77
    BITWISEOR   shift, and go to state 78
    BITWISEXOR  shift, and go to state 79
    AND         shift, and go to state 80
    ASSIGN      shift, and go to state 81
    MUL         shift, and go to state 82
    COMMA       shift, and go to state 134
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    OR          shift, and go to state 92
    PLUS        shift, and go to state 93

    $default  reduce using rule 79 (ExprAuxAux)

    ExprAuxAux  go to state 135


State 112

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   55     | Expr BITWISEAND Expr •
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr

    MUL    shift, and go to state 82
    DIV    shift, and go to state 83
    EQ     shift, and go to state 84
    GE     shift, and go to state 85
    GT     shift, and go to state 86
    LE     shift, and go to state 87
    LT     shift, and go to state 88
    MINUS  shift, and go to state 89
    MOD    shift, and go to state 90
    NE     shift, and go to state 91
    PLUS   shift, and go to state 93

    $default  reduce using rule 55 (Expr)


State 113

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   56     | Expr BITWISEOR Expr •
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr

    BITWISEAND  shift, and go to state 77
    BITWISEXOR  shift, and go to state 79
    MUL         shift, and go to state 82
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    PLUS        shift, and go to state 93

    $default  reduce using rule 56 (Expr)


State 114

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   57     | Expr BITWISEXOR Expr •
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr

    BITWISEAND  shift, and go to state 77
    MUL         shift, and go to state 82
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    PLUS        shift, and go to state 93

    $default  reduce using rule 57 (Expr)


State 115

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   54     | Expr AND Expr •
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr

    BITWISEAND  shift, and go to state 77
    BITWISEOR   shift, and go to state 78
    BITWISEXOR  shift, and go to state 79
    MUL         shift, and go to state 82
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    PLUS        shift, and go to state 93

    $default  reduce using rule 54 (Expr)


State 116

   47 Expr: Expr • ASSIGN Expr
   47     | Expr ASSIGN Expr •
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr

    BITWISEAND  shift, and go to state 77
    BITWISEOR   shift, and go to state 78
    BITWISEXOR  shift, and go to state 79
    AND         shift, and go to state 80
    ASSIGN      shift, and go to state 81
    MUL         shift, and go to state 82
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    OR          shift, and go to state 92
    PLUS        shift, and go to state 93

    $default  reduce using rule 47 (Expr)


State 117

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   50     | Expr MUL Expr •
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr

    $default  reduce using rule 50 (Expr)


State 118

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   51     | Expr DIV Expr •
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr

    $default  reduce using rule 51 (Expr)


State 119

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   58     | Expr EQ Expr •
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr

    MUL    shift, and go to state 82
    DIV    shift, and go to state 83
    GE     shift, and go to state 85
    GT     shift, and go to state 86
    LE     shift, and go to state 87
    LT     shift, and go to state 88
    MINUS  shift, and go to state 89
    MOD    shift, and go to state 90
    PLUS   shift, and go to state 93

    $default  reduce using rule 58 (Expr)


State 120

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   61     | Expr GE Expr •
   62     | Expr • LT Expr
   63     | Expr • GT Expr

    MUL    shift, and go to state 82
    DIV    shift, and go to state 83
    MINUS  shift, and go to state 89
    MOD    shift, and go to state 90
    PLUS   shift, and go to state 93

    $default  reduce using rule 61 (Expr)


State 121

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   63     | Expr GT Expr •

    MUL    shift, and go to state 82
    DIV    shift, and go to state 83
    MINUS  shift, and go to state 89
    MOD    shift, and go to state 90
    PLUS   shift, and go to state 93

    $default  reduce using rule 63 (Expr)


State 122

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   60     | Expr LE Expr •
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr

    MUL    shift, and go to state 82
    DIV    shift, and go to state 83
    MINUS  shift, and go to state 89
    MOD    shift, and go to state 90
    PLUS   shift, and go to state 93

    $default  reduce using rule 60 (Expr)


State 123

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   62     | Expr LT Expr •
   63     | Expr • GT Expr

    MUL    shift, and go to state 82
    DIV    shift, and go to state 83
    MINUS  shift, and go to state 89
    MOD    shift, and go to state 90
    PLUS   shift, and go to state 93

    $default  reduce using rule 62 (Expr)


State 124

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   49     | Expr MINUS Expr •
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr

    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 90

    $default  reduce using rule 49 (Expr)


State 125

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   52     | Expr MOD Expr •
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr

    $default  reduce using rule 52 (Expr)


State 126

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   59     | Expr NE Expr •
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr

    MUL    shift, and go to state 82
    DIV    shift, and go to state 83
    GE     shift, and go to state 85
    GT     shift, and go to state 86
    LE     shift, and go to state 87
    LT     shift, and go to state 88
    MINUS  shift, and go to state 89
    MOD    shift, and go to state 90
    PLUS   shift, and go to state 93

    $default  reduce using rule 59 (Expr)


State 127

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   53     | Expr OR Expr •
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr

    BITWISEAND  shift, and go to state 77
    BITWISEOR   shift, and go to state 78
    BITWISEXOR  shift, and go to state 79
    AND         shift, and go to state 80
    MUL         shift, and go to state 82
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    PLUS        shift, and go to state 93

    $default  reduce using rule 53 (Expr)


State 128

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   48     | Expr PLUS Expr •
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr

    MUL  shift, and go to state 82
    DIV  shift, and go to state 83
    MOD  shift, and go to state 90

    $default  reduce using rule 48 (Expr)


State 129

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   76 ExprAux: ExprAux COMMA Expr •

    BITWISEAND  shift, and go to state 77
    BITWISEOR   shift, and go to state 78
    BITWISEXOR  shift, and go to state 79
    AND         shift, and go to state 80
    ASSIGN      shift, and go to state 81
    MUL         shift, and go to state 82
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    OR          shift, and go to state 92
    PLUS        shift, and go to state 93

    $default  reduce using rule 76 (ExprAux)


State 130

   18 ParameterListAux: ParameterDeclaration COMMA ParameterListAux •

    $default  reduce using rule 18 (ParameterListAux)


State 131

   34 Statement: IF LPAR ExprAux RPAR • StatementAux
   35          | IF LPAR ExprAux RPAR • StatementAux ELSE StatementAux

    error    shift, and go to state 105
    IF       shift, and go to state 32
    WHILE    shift, and go to state 33
    RETURN   shift, and go to state 34
    LBRACE   shift, and go to state 35
    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    SEMI     shift, and go to state 41
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Statement     go to state 65
    StatementAux  go to state 136
    Expr          go to state 50
    ExprAux       go to state 51


State 132

   36 Statement: WHILE LPAR ExprAux RPAR • Statement

    IF       shift, and go to state 32
    WHILE    shift, and go to state 33
    RETURN   shift, and go to state 34
    LBRACE   shift, and go to state 35
    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    SEMI     shift, and go to state 41
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Statement  go to state 137
    Expr       go to state 50
    ExprAux    go to state 51


State 133

   75 Expr: ID LPAR error RPAR •

    $default  reduce using rule 75 (Expr)


State 134

   78 ExprAuxAux: COMMA • Expr ExprAuxAux

    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Expr  go to state 138


State 135

   67 Expr: ID LPAR Expr ExprAuxAux • RPAR

    RPAR  shift, and go to state 139


State 136

   34 Statement: IF LPAR ExprAux RPAR StatementAux •
   35          | IF LPAR ExprAux RPAR StatementAux • ELSE StatementAux

    ELSE  shift, and go to state 140

    $default  reduce using rule 34 (Statement)


State 137

   36 Statement: WHILE LPAR ExprAux RPAR Statement •

    $default  reduce using rule 36 (Statement)


State 138

   47 Expr: Expr • ASSIGN Expr
   48     | Expr • PLUS Expr
   49     | Expr • MINUS Expr
   50     | Expr • MUL Expr
   51     | Expr • DIV Expr
   52     | Expr • MOD Expr
   53     | Expr • OR Expr
   54     | Expr • AND Expr
   55     | Expr • BITWISEAND Expr
   56     | Expr • BITWISEOR Expr
   57     | Expr • BITWISEXOR Expr
   58     | Expr • EQ Expr
   59     | Expr • NE Expr
   60     | Expr • LE Expr
   61     | Expr • GE Expr
   62     | Expr • LT Expr
   63     | Expr • GT Expr
   78 ExprAuxAux: COMMA Expr • ExprAuxAux

    BITWISEAND  shift, and go to state 77
    BITWISEOR   shift, and go to state 78
    BITWISEXOR  shift, and go to state 79
    AND         shift, and go to state 80
    ASSIGN      shift, and go to state 81
    MUL         shift, and go to state 82
    COMMA       shift, and go to state 134
    DIV         shift, and go to state 83
    EQ          shift, and go to state 84
    GE          shift, and go to state 85
    GT          shift, and go to state 86
    LE          shift, and go to state 87
    LT          shift, and go to state 88
    MINUS       shift, and go to state 89
    MOD         shift, and go to state 90
    NE          shift, and go to state 91
    OR          shift, and go to state 92
    PLUS        shift, and go to state 93

    $default  reduce using rule 79 (ExprAuxAux)

    ExprAuxAux  go to state 141


State 139

   67 Expr: ID LPAR Expr ExprAuxAux RPAR •

    $default  reduce using rule 67 (Expr)


State 140

   35 Statement: IF LPAR ExprAux RPAR StatementAux ELSE • StatementAux

    error    shift, and go to state 105
    IF       shift, and go to state 32
    WHILE    shift, and go to state 33
    RETURN   shift, and go to state 34
    LBRACE   shift, and go to state 35
    LPAR     shift, and go to state 36
    MINUS    shift, and go to state 37
    NOT      shift, and go to state 38
    PLUS     shift, and go to state 39
    SEMI     shift, and go to state 41
    ID       shift, and go to state 42
    NATURAL  shift, and go to state 43
    DECIMAL  shift, and go to state 44
    CHRLIT   shift, and go to state 45

    Statement     go to state 65
    StatementAux  go to state 142
    Expr          go to state 50
    ExprAux       go to state 51


State 141

   78 ExprAuxAux: COMMA Expr ExprAuxAux •

    $default  reduce using rule 78 (ExprAuxAux)


State 142

   35 Statement: IF LPAR ExprAux RPAR StatementAux ELSE StatementAux •

    $default  reduce using rule 35 (Statement)
