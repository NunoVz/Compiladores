Terminals unused in grammar

    RESERVED


Grammar

    0 $accept: Program $end

    1 Program: FunctionsAndDeclarations

    2 FunctionsAndDeclarations: FunctionDefinition FunctionsAndDeclarations
    3                         | FunctionDeclaration FunctionsAndDeclarations
    4                         | Declaration FunctionsAndDeclarations
    5                         | ε

    6 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody

    7 FunctionBody: LBRACE DeclarationsAndStatements RBRACE

    8 DeclarationsAndStatements: StatementOrDeclaration DeclarationsAndStatements
    9                          | ε

   10 StatementOrDeclaration: Statement
   11                       | Declaration

   12 FunctionDeclaration: TypeSpec FunctionDeclarator RBRACE

   13 FunctionDeclarator: ID LPAR ParameterList RPAR

   14 ParameterList: ParameterDeclaration ParameterListAux
   15              | ε

   16 ParameterListAux: COMMA ParameterDeclaration ParameterListAux
   17                 | ε

   18 ParameterDeclaration: TypeSpec ID
   19                     | TypeSpec

   20 Declaration: TypeSpec Declarator SEMI
   21            | error SEMI

   22 TypeSpec: CHAR
   23         | INT
   24         | VOID
   25         | SHORT
   26         | DOUBLE

   27 Declarator: ID DeclaratorAux

   28 DeclaratorAux: ASSIGN Expr
   29              | ε

   30 Statement: LBRACE DeclarationsAndStatements RBRACE
   31          | IF LPAR Expr RPAR StatementAux
   32          | IF LPAR Expr RPAR StatementAux ELSE StatementAux
   33          | WHILE LPAR Expr RPAR StatementAux
   34          | RETURN SEMI
   35          | RETURN Expr SEMI
   36          | Expr SEMI

   37 StatementAux: Statement
   38             | SEMI

   39 Expr: Expr ASSIGN Expr
   40     | Expr COMMA Expr
   41     | Expr PLUS Expr
   42     | Expr MINUS Expr
   43     | Expr MUL Expr
   44     | Expr DIV Expr
   45     | Expr MOD Expr
   46     | Expr OR Expr
   47     | Expr AND Expr
   48     | Expr BITWISEAND Expr
   49     | Expr BITWISEOR Expr
   50     | Expr BITWISEXOR Expr
   51     | Expr EQ Expr
   52     | Expr NE Expr
   53     | Expr LE Expr
   54     | Expr GE Expr
   55     | Expr LT Expr
   56     | Expr GT Expr
   57     | PLUS Expr
   58     | MINUS Expr
   59     | NOT Expr
   60     | ID LPAR RPAR
   61     | ID
   62     | NATURAL
   63     | CHRLIT
   64     | DECIMAL
   65     | LPAR Expr RPAR
   66     | ID LPAR error RPAR
   67     | LPAR error RPAR


Terminals, with rules where they appear

    $end (0) 0
    error (256) 21 66 67
    RESERVED <value> (258)
    IF <value> (259) 31 32
    INT <value> (260) 23
    SHORT <value> (261) 25
    DOUBLE <value> (262) 26
    CHAR <value> (263) 22
    ELSE <value> (264) 32
    WHILE <value> (265) 33
    RETURN <value> (266) 34 35
    VOID <value> (267) 24
    BITWISEAND <value> (268) 48
    BITWISEOR <value> (269) 49
    BITWISEXOR <value> (270) 50
    AND <value> (271) 47
    ASSIGN <value> (272) 28 39
    MUL <value> (273) 43
    COMMA <value> (274) 16 40
    DIV <value> (275) 44
    EQ <value> (276) 51
    GE <value> (277) 54
    GT <value> (278) 56
    LBRACE <value> (279) 7 30
    LE <value> (280) 53
    LPAR <value> (281) 13 31 32 33 60 65 66 67
    LT <value> (282) 55
    MINUS <value> (283) 42 58
    MOD <value> (284) 45
    NE <value> (285) 52
    NOT <value> (286) 59
    OR <value> (287) 46
    PLUS <value> (288) 41 57
    RBRACE <value> (289) 7 12 30
    RPAR <value> (290) 13 31 32 33 60 65 66 67
    SEMI <value> (291) 20 21 34 35 36 38
    ID <value> (292) 13 18 27 60 61 66
    NATURAL <value> (293) 62
    DECIMAL <value> (294) 64
    CHRLIT <value> (295) 63


Nonterminals, with rules where they appear

    $accept (41)
        on left: 0
    Program <no> (42)
        on left: 1
        on right: 0
    FunctionsAndDeclarations <no> (43)
        on left: 2 3 4 5
        on right: 1 2 3 4
    FunctionDefinition <no> (44)
        on left: 6
        on right: 2
    FunctionBody <no> (45)
        on left: 7
        on right: 6
    DeclarationsAndStatements <no> (46)
        on left: 8 9
        on right: 7 8 30
    StatementOrDeclaration <no> (47)
        on left: 10 11
        on right: 8
    FunctionDeclaration <no> (48)
        on left: 12
        on right: 3
    FunctionDeclarator <no> (49)
        on left: 13
        on right: 6 12
    ParameterList <no> (50)
        on left: 14 15
        on right: 13
    ParameterListAux <no> (51)
        on left: 16 17
        on right: 14 16
    ParameterDeclaration <no> (52)
        on left: 18 19
        on right: 14 16
    Declaration <no> (53)
        on left: 20 21
        on right: 4 11
    TypeSpec <no> (54)
        on left: 22 23 24 25 26
        on right: 6 12 18 19 20
    Declarator <no> (55)
        on left: 27
        on right: 20
    DeclaratorAux <no> (56)
        on left: 28 29
        on right: 27
    Statement <no> (57)
        on left: 30 31 32 33 34 35 36
        on right: 10 37
    StatementAux <no> (58)
        on left: 37 38
        on right: 31 32 33
    Expr <no> (59)
        on left: 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 60 61 62 63 64 65 66 67
        on right: 28 31 32 33 35 36 39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 55 56 57 58 59 65


State 0

    0 $accept: • Program $end

    error   shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    CHAR    shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 5 (FunctionsAndDeclarations)

    Program                   go to state 7
    FunctionsAndDeclarations  go to state 8
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 1

   21 Declaration: error • SEMI

    SEMI  shift, and go to state 13


State 2

   23 TypeSpec: INT •

    $default  reduce using rule 23 (TypeSpec)


State 3

   25 TypeSpec: SHORT •

    $default  reduce using rule 25 (TypeSpec)


State 4

   26 TypeSpec: DOUBLE •

    $default  reduce using rule 26 (TypeSpec)


State 5

   22 TypeSpec: CHAR •

    $default  reduce using rule 22 (TypeSpec)


State 6

   24 TypeSpec: VOID •

    $default  reduce using rule 24 (TypeSpec)


State 7

    0 $accept: Program • $end

    $end  shift, and go to state 14


State 8

    1 Program: FunctionsAndDeclarations •

    $default  reduce using rule 1 (Program)


State 9

    2 FunctionsAndDeclarations: FunctionDefinition • FunctionsAndDeclarations

    error   shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    CHAR    shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 5 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 15
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 10

    3 FunctionsAndDeclarations: FunctionDeclaration • FunctionsAndDeclarations

    error   shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    CHAR    shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 5 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 16
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 11

    4 FunctionsAndDeclarations: Declaration • FunctionsAndDeclarations

    error   shift, and go to state 1
    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    CHAR    shift, and go to state 5
    VOID    shift, and go to state 6

    $end  reduce using rule 5 (FunctionsAndDeclarations)

    FunctionsAndDeclarations  go to state 17
    FunctionDefinition        go to state 9
    FunctionDeclaration       go to state 10
    Declaration               go to state 11
    TypeSpec                  go to state 12


State 12

    6 FunctionDefinition: TypeSpec • FunctionDeclarator FunctionBody
   12 FunctionDeclaration: TypeSpec • FunctionDeclarator RBRACE
   20 Declaration: TypeSpec • Declarator SEMI

    ID  shift, and go to state 18

    FunctionDeclarator  go to state 19
    Declarator          go to state 20


State 13

   21 Declaration: error SEMI •

    $default  reduce using rule 21 (Declaration)


State 14

    0 $accept: Program $end •

    $default  accept


State 15

    2 FunctionsAndDeclarations: FunctionDefinition FunctionsAndDeclarations •

    $default  reduce using rule 2 (FunctionsAndDeclarations)


State 16

    3 FunctionsAndDeclarations: FunctionDeclaration FunctionsAndDeclarations •

    $default  reduce using rule 3 (FunctionsAndDeclarations)


State 17

    4 FunctionsAndDeclarations: Declaration FunctionsAndDeclarations •

    $default  reduce using rule 4 (FunctionsAndDeclarations)


State 18

   13 FunctionDeclarator: ID • LPAR ParameterList RPAR
   27 Declarator: ID • DeclaratorAux

    ASSIGN  shift, and go to state 21
    LPAR    shift, and go to state 22

    $default  reduce using rule 29 (DeclaratorAux)

    DeclaratorAux  go to state 23


State 19

    6 FunctionDefinition: TypeSpec FunctionDeclarator • FunctionBody
   12 FunctionDeclaration: TypeSpec FunctionDeclarator • RBRACE

    LBRACE  shift, and go to state 24
    RBRACE  shift, and go to state 25

    FunctionBody  go to state 26


State 20

   20 Declaration: TypeSpec Declarator • SEMI

    SEMI  shift, and go to state 27


State 21

   28 DeclaratorAux: ASSIGN • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 36


State 22

   13 FunctionDeclarator: ID LPAR • ParameterList RPAR

    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    CHAR    shift, and go to state 5
    VOID    shift, and go to state 6

    $default  reduce using rule 15 (ParameterList)

    ParameterList         go to state 37
    ParameterDeclaration  go to state 38
    TypeSpec              go to state 39


State 23

   27 Declarator: ID DeclaratorAux •

    $default  reduce using rule 27 (Declarator)


State 24

    7 FunctionBody: LBRACE • DeclarationsAndStatements RBRACE

    error    shift, and go to state 1
    IF       shift, and go to state 40
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    CHAR     shift, and go to state 5
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    RBRACE  reduce using rule 9 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 44
    StatementOrDeclaration     go to state 45
    Declaration                go to state 46
    TypeSpec                   go to state 47
    Statement                  go to state 48
    Expr                       go to state 49


State 25

   12 FunctionDeclaration: TypeSpec FunctionDeclarator RBRACE •

    $default  reduce using rule 12 (FunctionDeclaration)


State 26

    6 FunctionDefinition: TypeSpec FunctionDeclarator FunctionBody •

    $default  reduce using rule 6 (FunctionDefinition)


State 27

   20 Declaration: TypeSpec Declarator SEMI •

    $default  reduce using rule 20 (Declaration)


State 28

   65 Expr: LPAR • Expr RPAR
   67     | LPAR • error RPAR

    error    shift, and go to state 50
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 51


State 29

   58 Expr: MINUS • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 52


State 30

   59 Expr: NOT • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 53


State 31

   57 Expr: PLUS • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 54


State 32

   60 Expr: ID • LPAR RPAR
   61     | ID •
   66     | ID • LPAR error RPAR

    LPAR  shift, and go to state 55

    $default  reduce using rule 61 (Expr)


State 33

   62 Expr: NATURAL •

    $default  reduce using rule 62 (Expr)


State 34

   64 Expr: DECIMAL •

    $default  reduce using rule 64 (Expr)


State 35

   63 Expr: CHRLIT •

    $default  reduce using rule 63 (Expr)


State 36

   28 DeclaratorAux: ASSIGN Expr •
   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 62
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73

    $default  reduce using rule 28 (DeclaratorAux)


State 37

   13 FunctionDeclarator: ID LPAR ParameterList • RPAR

    RPAR  shift, and go to state 74


State 38

   14 ParameterList: ParameterDeclaration • ParameterListAux

    COMMA  shift, and go to state 75

    $default  reduce using rule 17 (ParameterListAux)

    ParameterListAux  go to state 76


State 39

   18 ParameterDeclaration: TypeSpec • ID
   19                     | TypeSpec •

    ID  shift, and go to state 77

    $default  reduce using rule 19 (ParameterDeclaration)


State 40

   31 Statement: IF • LPAR Expr RPAR StatementAux
   32          | IF • LPAR Expr RPAR StatementAux ELSE StatementAux

    LPAR  shift, and go to state 78


State 41

   33 Statement: WHILE • LPAR Expr RPAR StatementAux

    LPAR  shift, and go to state 79


State 42

   34 Statement: RETURN • SEMI
   35          | RETURN • Expr SEMI

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 80
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 81


State 43

   30 Statement: LBRACE • DeclarationsAndStatements RBRACE

    error    shift, and go to state 1
    IF       shift, and go to state 40
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    CHAR     shift, and go to state 5
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    RBRACE  reduce using rule 9 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 82
    StatementOrDeclaration     go to state 45
    Declaration                go to state 46
    TypeSpec                   go to state 47
    Statement                  go to state 48
    Expr                       go to state 49


State 44

    7 FunctionBody: LBRACE DeclarationsAndStatements • RBRACE

    RBRACE  shift, and go to state 83


State 45

    8 DeclarationsAndStatements: StatementOrDeclaration • DeclarationsAndStatements

    error    shift, and go to state 1
    IF       shift, and go to state 40
    INT      shift, and go to state 2
    SHORT    shift, and go to state 3
    DOUBLE   shift, and go to state 4
    CHAR     shift, and go to state 5
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    VOID     shift, and go to state 6
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    RBRACE  reduce using rule 9 (DeclarationsAndStatements)

    DeclarationsAndStatements  go to state 84
    StatementOrDeclaration     go to state 45
    Declaration                go to state 46
    TypeSpec                   go to state 47
    Statement                  go to state 48
    Expr                       go to state 49


State 46

   11 StatementOrDeclaration: Declaration •

    $default  reduce using rule 11 (StatementOrDeclaration)


State 47

   20 Declaration: TypeSpec • Declarator SEMI

    ID  shift, and go to state 85

    Declarator  go to state 20


State 48

   10 StatementOrDeclaration: Statement •

    $default  reduce using rule 10 (StatementOrDeclaration)


State 49

   36 Statement: Expr • SEMI
   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 62
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73
    SEMI        shift, and go to state 86


State 50

   67 Expr: LPAR error • RPAR

    RPAR  shift, and go to state 87


State 51

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr
   65     | LPAR Expr • RPAR

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 62
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73
    RPAR        shift, and go to state 88


State 52

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr
   58     | MINUS Expr •

    MUL  shift, and go to state 61
    DIV  shift, and go to state 63
    MOD  shift, and go to state 70

    $default  reduce using rule 58 (Expr)


State 53

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr
   59     | NOT Expr •

    $default  reduce using rule 59 (Expr)


State 54

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr
   57     | PLUS Expr •

    MUL  shift, and go to state 61
    DIV  shift, and go to state 63
    MOD  shift, and go to state 70

    $default  reduce using rule 57 (Expr)


State 55

   60 Expr: ID LPAR • RPAR
   66     | ID LPAR • error RPAR

    error  shift, and go to state 89
    RPAR   shift, and go to state 90


State 56

   48 Expr: Expr BITWISEAND • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 91


State 57

   49 Expr: Expr BITWISEOR • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 92


State 58

   50 Expr: Expr BITWISEXOR • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 93


State 59

   47 Expr: Expr AND • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 94


State 60

   39 Expr: Expr ASSIGN • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 95


State 61

   43 Expr: Expr MUL • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 96


State 62

   40 Expr: Expr COMMA • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 97


State 63

   44 Expr: Expr DIV • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 98


State 64

   51 Expr: Expr EQ • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 99


State 65

   54 Expr: Expr GE • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 100


State 66

   56 Expr: Expr GT • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 101


State 67

   53 Expr: Expr LE • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 102


State 68

   55 Expr: Expr LT • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 103


State 69

   42 Expr: Expr MINUS • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 104


State 70

   45 Expr: Expr MOD • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 105


State 71

   52 Expr: Expr NE • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 106


State 72

   46 Expr: Expr OR • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 107


State 73

   41 Expr: Expr PLUS • Expr

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 108


State 74

   13 FunctionDeclarator: ID LPAR ParameterList RPAR •

    $default  reduce using rule 13 (FunctionDeclarator)


State 75

   16 ParameterListAux: COMMA • ParameterDeclaration ParameterListAux

    INT     shift, and go to state 2
    SHORT   shift, and go to state 3
    DOUBLE  shift, and go to state 4
    CHAR    shift, and go to state 5
    VOID    shift, and go to state 6

    ParameterDeclaration  go to state 109
    TypeSpec              go to state 39


State 76

   14 ParameterList: ParameterDeclaration ParameterListAux •

    $default  reduce using rule 14 (ParameterList)


State 77

   18 ParameterDeclaration: TypeSpec ID •

    $default  reduce using rule 18 (ParameterDeclaration)


State 78

   31 Statement: IF LPAR • Expr RPAR StatementAux
   32          | IF LPAR • Expr RPAR StatementAux ELSE StatementAux

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 110


State 79

   33 Statement: WHILE LPAR • Expr RPAR StatementAux

    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Expr  go to state 111


State 80

   34 Statement: RETURN SEMI •

    $default  reduce using rule 34 (Statement)


State 81

   35 Statement: RETURN Expr • SEMI
   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 62
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73
    SEMI        shift, and go to state 112


State 82

   30 Statement: LBRACE DeclarationsAndStatements • RBRACE

    RBRACE  shift, and go to state 113


State 83

    7 FunctionBody: LBRACE DeclarationsAndStatements RBRACE •

    $default  reduce using rule 7 (FunctionBody)


State 84

    8 DeclarationsAndStatements: StatementOrDeclaration DeclarationsAndStatements •

    $default  reduce using rule 8 (DeclarationsAndStatements)


State 85

   27 Declarator: ID • DeclaratorAux

    ASSIGN  shift, and go to state 21

    $default  reduce using rule 29 (DeclaratorAux)

    DeclaratorAux  go to state 23


State 86

   36 Statement: Expr SEMI •

    $default  reduce using rule 36 (Statement)


State 87

   67 Expr: LPAR error RPAR •

    $default  reduce using rule 67 (Expr)


State 88

   65 Expr: LPAR Expr RPAR •

    $default  reduce using rule 65 (Expr)


State 89

   66 Expr: ID LPAR error • RPAR

    RPAR  shift, and go to state 114


State 90

   60 Expr: ID LPAR RPAR •

    $default  reduce using rule 60 (Expr)


State 91

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   48     | Expr BITWISEAND Expr •
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    MUL    shift, and go to state 61
    DIV    shift, and go to state 63
    EQ     shift, and go to state 64
    GE     shift, and go to state 65
    GT     shift, and go to state 66
    LE     shift, and go to state 67
    LT     shift, and go to state 68
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 70
    NE     shift, and go to state 71
    PLUS   shift, and go to state 73

    $default  reduce using rule 48 (Expr)


State 92

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   49     | Expr BITWISEOR Expr •
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    BITWISEAND  shift, and go to state 56
    BITWISEXOR  shift, and go to state 58
    MUL         shift, and go to state 61
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    PLUS        shift, and go to state 73

    $default  reduce using rule 49 (Expr)


State 93

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   50     | Expr BITWISEXOR Expr •
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    BITWISEAND  shift, and go to state 56
    MUL         shift, and go to state 61
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    PLUS        shift, and go to state 73

    $default  reduce using rule 50 (Expr)


State 94

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   47     | Expr AND Expr •
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    MUL         shift, and go to state 61
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    PLUS        shift, and go to state 73

    $default  reduce using rule 47 (Expr)


State 95

   39 Expr: Expr • ASSIGN Expr
   39     | Expr ASSIGN Expr •
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73

    $default  reduce using rule 39 (Expr)


State 96

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   43     | Expr MUL Expr •
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    $default  reduce using rule 43 (Expr)


State 97

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   40     | Expr COMMA Expr •
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73

    $default  reduce using rule 40 (Expr)


State 98

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   44     | Expr DIV Expr •
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    $default  reduce using rule 44 (Expr)


State 99

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   51     | Expr EQ Expr •
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    MUL    shift, and go to state 61
    DIV    shift, and go to state 63
    GE     shift, and go to state 65
    GT     shift, and go to state 66
    LE     shift, and go to state 67
    LT     shift, and go to state 68
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 70
    PLUS   shift, and go to state 73

    $default  reduce using rule 51 (Expr)


State 100

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   54     | Expr GE Expr •
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    MUL    shift, and go to state 61
    DIV    shift, and go to state 63
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 70
    PLUS   shift, and go to state 73

    $default  reduce using rule 54 (Expr)


State 101

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr
   56     | Expr GT Expr •

    MUL    shift, and go to state 61
    DIV    shift, and go to state 63
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 70
    PLUS   shift, and go to state 73

    $default  reduce using rule 56 (Expr)


State 102

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   53     | Expr LE Expr •
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    MUL    shift, and go to state 61
    DIV    shift, and go to state 63
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 70
    PLUS   shift, and go to state 73

    $default  reduce using rule 53 (Expr)


State 103

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   55     | Expr LT Expr •
   56     | Expr • GT Expr

    MUL    shift, and go to state 61
    DIV    shift, and go to state 63
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 70
    PLUS   shift, and go to state 73

    $default  reduce using rule 55 (Expr)


State 104

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   42     | Expr MINUS Expr •
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    MUL  shift, and go to state 61
    DIV  shift, and go to state 63
    MOD  shift, and go to state 70

    $default  reduce using rule 42 (Expr)


State 105

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   45     | Expr MOD Expr •
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    $default  reduce using rule 45 (Expr)


State 106

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   52     | Expr NE Expr •
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    MUL    shift, and go to state 61
    DIV    shift, and go to state 63
    GE     shift, and go to state 65
    GT     shift, and go to state 66
    LE     shift, and go to state 67
    LT     shift, and go to state 68
    MINUS  shift, and go to state 69
    MOD    shift, and go to state 70
    PLUS   shift, and go to state 73

    $default  reduce using rule 52 (Expr)


State 107

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   46     | Expr OR Expr •
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    MUL         shift, and go to state 61
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    PLUS        shift, and go to state 73

    $default  reduce using rule 46 (Expr)


State 108

   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   41     | Expr PLUS Expr •
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    MUL  shift, and go to state 61
    DIV  shift, and go to state 63
    MOD  shift, and go to state 70

    $default  reduce using rule 41 (Expr)


State 109

   16 ParameterListAux: COMMA ParameterDeclaration • ParameterListAux

    COMMA  shift, and go to state 75

    $default  reduce using rule 17 (ParameterListAux)

    ParameterListAux  go to state 115


State 110

   31 Statement: IF LPAR Expr • RPAR StatementAux
   32          | IF LPAR Expr • RPAR StatementAux ELSE StatementAux
   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 62
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73
    RPAR        shift, and go to state 116


State 111

   33 Statement: WHILE LPAR Expr • RPAR StatementAux
   39 Expr: Expr • ASSIGN Expr
   40     | Expr • COMMA Expr
   41     | Expr • PLUS Expr
   42     | Expr • MINUS Expr
   43     | Expr • MUL Expr
   44     | Expr • DIV Expr
   45     | Expr • MOD Expr
   46     | Expr • OR Expr
   47     | Expr • AND Expr
   48     | Expr • BITWISEAND Expr
   49     | Expr • BITWISEOR Expr
   50     | Expr • BITWISEXOR Expr
   51     | Expr • EQ Expr
   52     | Expr • NE Expr
   53     | Expr • LE Expr
   54     | Expr • GE Expr
   55     | Expr • LT Expr
   56     | Expr • GT Expr

    BITWISEAND  shift, and go to state 56
    BITWISEOR   shift, and go to state 57
    BITWISEXOR  shift, and go to state 58
    AND         shift, and go to state 59
    ASSIGN      shift, and go to state 60
    MUL         shift, and go to state 61
    COMMA       shift, and go to state 62
    DIV         shift, and go to state 63
    EQ          shift, and go to state 64
    GE          shift, and go to state 65
    GT          shift, and go to state 66
    LE          shift, and go to state 67
    LT          shift, and go to state 68
    MINUS       shift, and go to state 69
    MOD         shift, and go to state 70
    NE          shift, and go to state 71
    OR          shift, and go to state 72
    PLUS        shift, and go to state 73
    RPAR        shift, and go to state 117


State 112

   35 Statement: RETURN Expr SEMI •

    $default  reduce using rule 35 (Statement)


State 113

   30 Statement: LBRACE DeclarationsAndStatements RBRACE •

    $default  reduce using rule 30 (Statement)


State 114

   66 Expr: ID LPAR error RPAR •

    $default  reduce using rule 66 (Expr)


State 115

   16 ParameterListAux: COMMA ParameterDeclaration ParameterListAux •

    $default  reduce using rule 16 (ParameterListAux)


State 116

   31 Statement: IF LPAR Expr RPAR • StatementAux
   32          | IF LPAR Expr RPAR • StatementAux ELSE StatementAux

    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 118
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Statement     go to state 119
    StatementAux  go to state 120
    Expr          go to state 49


State 117

   33 Statement: WHILE LPAR Expr RPAR • StatementAux

    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 118
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Statement     go to state 119
    StatementAux  go to state 121
    Expr          go to state 49


State 118

   38 StatementAux: SEMI •

    $default  reduce using rule 38 (StatementAux)


State 119

   37 StatementAux: Statement •

    $default  reduce using rule 37 (StatementAux)


State 120

   31 Statement: IF LPAR Expr RPAR StatementAux •
   32          | IF LPAR Expr RPAR StatementAux • ELSE StatementAux

    ELSE  shift, and go to state 122

    $default  reduce using rule 31 (Statement)


State 121

   33 Statement: WHILE LPAR Expr RPAR StatementAux •

    $default  reduce using rule 33 (Statement)


State 122

   32 Statement: IF LPAR Expr RPAR StatementAux ELSE • StatementAux

    IF       shift, and go to state 40
    WHILE    shift, and go to state 41
    RETURN   shift, and go to state 42
    LBRACE   shift, and go to state 43
    LPAR     shift, and go to state 28
    MINUS    shift, and go to state 29
    NOT      shift, and go to state 30
    PLUS     shift, and go to state 31
    SEMI     shift, and go to state 118
    ID       shift, and go to state 32
    NATURAL  shift, and go to state 33
    DECIMAL  shift, and go to state 34
    CHRLIT   shift, and go to state 35

    Statement     go to state 119
    StatementAux  go to state 123
    Expr          go to state 49


State 123

   32 Statement: IF LPAR Expr RPAR StatementAux ELSE StatementAux •

    $default  reduce using rule 32 (Statement)
