Type: int
Type: int
Parameter Declaration ID:number
Empty Parameter List
Parameter List
Function Declarator
Type: int
Natural: 1
Expr from ExprAux
Declaration4
Identifier (number)
Natural: 0
Not Equal
Expr from ExprAux
Identifier (answer)
Identifier (answer)
Identifier (number)
Multiplication
Store
Expr from ExprAux
Expression Statement
Identifier (number)
Identifier (number)
Natural: 1
Subtraction
Store
Expr from ExprAux
Expression Statement
Stat + StatList
Statlist
While Loop
Identifier (answer)
Expr from ExprAux
Return Statement with Value
Function Body
Function Definition
Type: int
Type: int
Parameter Declaration ID:number
Empty Parameter List
Parameter List
Function Declarator
Identifier (num)
Natural: 0
Equal
Expr from ExprAux
Natural: 1
Expr from ExprAux
Return Statement with Value
Statlist
If Statement
Identifier (number)
Identifier (number)
CALL w stuff
Multiplication
Expr from ExprAux
Return Statement with Value
Function Body
Function Definition
Type: int
Type: int
Parameter Declaration ID:number
Type: int
Parameter Declaration ID:k
Empty Parameter List
Parameter List
Parameter List
Function Declarator
Identifier (number)
Natural: 0
Equal
Expr from ExprAux
Natural: 1
Expr from ExprAux
Return Statement with Value
Statlist
If Statement
Identifier (number)
Natural: 1
Subtraction
Identifier (k)
Identifier (number)
Multiplication
CALL w stuff
Expr from ExprAux
Return Statement with Value
Function Body
Function Definition
Type: void
Type: void
Empty Parameter Declaration
Empty Parameter List
Parameter List
Function Declarator
Char Literal: '#'
CALL w stuff
Expr from ExprAux
Expression Statement
Char Literal: '#'
CALL w stuff
Expr from ExprAux
Expression Statement
Char Literal: '\t'
CALL w stuff
Expr from ExprAux
Expression Statement
Char Literal: 'F'
CALL w stuff
Expr from ExprAux
Expression Statement
Char Literal: 'A'
CALL w stuff
Expr from ExprAux
Expression Statement
Char Literal: 'C'
CALL w stuff
Expr from ExprAux
Expression Statement
Char Literal: 'T'
CALL w stuff
Expr from ExprAux
Expression Statement
Char Literal: 'O'
CALL w stuff
Expr from ExprAux
Expression Statement
Char Literal: 'R'
CALL w stuff
Expr from ExprAux
Expression Statement
Char Literal: 'I'
CALL w stuff
Expr from ExprAux
Expression Statement
Char Literal: 'A'
CALL w stuff
Expr from ExprAux
Expression Statement
Char Literal: 'L'
CALL w stuff
Expr from ExprAux
Expression Statement
Char Literal: 'S'
CALL w stuff
Expr from ExprAux
Expression Statement
Char Literal: '#'
CALL w stuff
Expr from ExprAux
Expression Statement
Char Literal: '#'
CALL w stuff
Expr from ExprAux
Expression Statement
Char Literal: '\t'
CALL w stuff
Expr from ExprAux
Expression Statement
Char Literal: '\n'
CALL w stuff
Expr from ExprAux
Expression Statement
Function Body
Function Definition
Type: int
Type: char
Parameter Declaration ID:c
Empty Parameter List
Parameter List
Function Declarator
Identifier (c)
Char Literal: '0'
Greater Than or Equal
Identifier (c)
Char Literal: '9'
Less Than or Equal
Logical AND
Expr from ExprAux
Identifier (c)
Char Literal: '0'
Subtraction
Expr from ExprAux
Return Statement with Value
Statlist
If Statement
Function Body
Function Definition
Type: int
Type: void
Empty Parameter Declaration
Empty Parameter List
Parameter List
Function Declarator
Call wo stuff
Expr from ExprAux
Expression Statement
Type: int
Call wo stuff
CALL w stuff
Expr from ExprAux
Declaration4
Identifier (i)
CALL w stuff
Expr from ExprAux
Expression Statement
Identifier (i)
CALL w stuff
Expr from ExprAux
Expression Statement
Identifier (i)
CALL w stuff
Expr from ExprAux
Expression Statement
Natural: 0
Expr from ExprAux
Return Statement with Value
Function Body
Function Definition
Program 
